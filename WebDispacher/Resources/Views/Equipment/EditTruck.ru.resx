<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Year" xml:space="preserve">
    <value>Год</value>
  </data>
  <data name="TypeTruck" xml:space="preserve">
    <value>Тип грузовика</value>
  </data>
  <data name="NameTruck" xml:space="preserve">
    <value>Название грузовика</value>
  </data>
  <data name="EditTruck" xml:space="preserve">
    <value>Редактировать Грузовик</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>Штат</value>
  </data>
  <data name="Vin" xml:space="preserve">
    <value>Vin</value>
  </data>
  <data name="Owner" xml:space="preserve">
    <value>Владелец</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Цвет</value>
  </data>
  <data name="SaveInfo" xml:space="preserve">
    <value>Сохранить</value>
  </data>
  <data name="BackToEquipment" xml:space="preserve">
    <value>Вернуться к оборудованию</value>
  </data>
  <data name="Make" xml:space="preserve">
    <value>Производитель</value>
  </data>
  <data name="Model" xml:space="preserve">
    <value>Модель</value>
  </data>
  <data name="PlateExp" xml:space="preserve">
    <value>Номер Exp</value>
  </data>
  <data name="PlateTruck" xml:space="preserve">
    <value>Номер грузовика</value>
  </data>
  <data name="TruckRegistration" xml:space="preserve">
    <value>Регистрация грузовика</value>
  </data>
  <data name="InfoMessageUploadFiles" xml:space="preserve">
    <value>Вы можете загружать файлы только в форматах pdf, jpg и jpeg-а (максимальный размер загружаемого файла составляет 5 Мб)</value>
  </data>
  <data name="SelectDoc" xml:space="preserve">
    <value>Выбрать документ</value>
  </data>
  <data name="TruckLeaseAgreement" xml:space="preserve">
    <value>Договор аренды грузовика</value>
  </data>
  <data name="TruckAnnualIns" xml:space="preserve">
    <value>Ежегодный осмотр грузовика</value>
  </data>
  <data name="BobTailPhysicalDamage" xml:space="preserve">
    <value>Боб-хвост физический урон</value>
  </data>
  <data name="NyHut" xml:space="preserve">
    <value>НЬЮ-ЙОРКСКАЯ ХИЖИНА</value>
  </data>
  <data name="OptionalForNyRolling" xml:space="preserve">
    <value>опционально для прокатки в Нью-Йорке</value>
  </data>
  <data name="VehicleCategory" xml:space="preserve">
    <value>Категория Авто</value>
  </data>
  <data name="ChooseVehicleCategory" xml:space="preserve">
    <value>Выберите тип авто</value>
  </data>
  <data name="ChooseTruckType" xml:space="preserve">
    <value>Выберите тип грузовика</value>
  </data>
  <data name="TruckStatus" xml:space="preserve">
    <value>Статус грузовика</value>
  </data>
  <data name="ChooseTruckStatus" xml:space="preserve">
    <value>Выберите статус грузовика</value>
  </data>
  <data name="TruckStatusActive" xml:space="preserve">
    <value>Активный</value>
  </data>
  <data name="TruckStatusInactive" xml:space="preserve">
    <value>Неактивный</value>
  </data>
  <data name="TruckStatusDamaged" xml:space="preserve">
    <value>Поврежденный</value>
  </data>
  <data name="TruckStatusBroken" xml:space="preserve">
    <value>Сломанный</value>
  </data>
  <data name="TruckStatusShop" xml:space="preserve">
    <value>Магазин</value>
  </data>
  <data name="TruckStatusDealership" xml:space="preserve">
    <value>Дилерский центр</value>
  </data>
  <data name="TruckStatusTowYard" xml:space="preserve">
    <value>Буксирная площадка</value>
  </data>
  <data name="TruckStatusEmergency" xml:space="preserve">
    <value>Аварийный</value>
  </data>
  <data name="NameTruckLabelInfo" xml:space="preserve">
    <value>Поразите воображение увлекательным названием</value>
  </data>
  <data name="YearLabelInfo" xml:space="preserve">
    <value>Укажите год, в котором разворачивается Ваша автомобильная история</value>
  </data>
  <data name="MakeLabelInfo" xml:space="preserve">
    <value>Введите название производителя, стоящего за Вашей автомобильной гордостью</value>
  </data>
  <data name="ModelLabelInfo" xml:space="preserve">
    <value>Введите название модели Вашего грузовика</value>
  </data>
  <data name="TruckGroupSuccessAdded" xml:space="preserve">
    <value>Успешно добавлена новая группа грузовиков</value>
  </data>
  <data name="TruckGroupNotAdded" xml:space="preserve">
    <value>Не удалось добавить новую группу грузовиков</value>
  </data>
  <data name="ChooseGroupType" xml:space="preserve">
    <value>Выберите группу грузовика</value>
  </data>
  <data name="CreateNewGroupType" xml:space="preserve">
    <value>Добавить новую группу</value>
  </data>
  <data name="GroupTruck" xml:space="preserve">
    <value>Группа грузовика</value>
  </data>
  <data name="CreateNewTruckStatus" xml:space="preserve">
    <value>Добавить новый статус</value>
  </data>
  <data name="TruckStatusSuccessAdded" xml:space="preserve">
    <value>Успешно добавлен новый статус грузовика</value>
  </data>
  <data name="TruckStatusNotAdded" xml:space="preserve">
    <value>Не удалось добавить новый статус грузовиков</value>
  </data>
  <data name="TruckLocation" xml:space="preserve">
    <value>Добавьте местоположение объекта</value>
  </data>
  <data name="AnnualIns" xml:space="preserve">
    <value>Ежегодные ИНС</value>
  </data>
  <data name="TruckLocationType" xml:space="preserve">
    <value>Тип местоположения</value>
  </data>
  <data name="MannuallyLocationType" xml:space="preserve">
    <value>Местоположение вручную</value>
  </data>
  <data name="GPSLocationType" xml:space="preserve">
    <value>Местоположение по GPS</value>
  </data>
  <data name="LaterLocationType" xml:space="preserve">
    <value>Местоположение позже</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Обновить</value>
  </data>
  <data name="TruckDocumentSuccessUpdated" xml:space="preserve">
    <value>Документ успешно обновлен</value>
  </data>
  <data name="TruckDocumentNotUpdated" xml:space="preserve">
    <value>Документ не удалось обновить</value>
  </data>
  <data name="UploadDocument" xml:space="preserve">
    <value>Загрузить документ</value>
  </data>
</root>