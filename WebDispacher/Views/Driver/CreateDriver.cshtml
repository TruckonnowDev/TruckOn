@using Microsoft.AspNetCore.Mvc.Localization
@using WebDispacher.Constants;

@model WebDispacher.ViewModels.Driver.CreateDriverViewModel

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "Create Driver";
}

<body>
    <div class="admin">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <div class="tabContent">
                        <div class="title">
                            <a href="#" onclick="history.back();">@Localizer["BackToDrivers"]</a>
                        </div>
                        <div class="title">
                            <h1 class="text-info-header-1">@Localizer["InfoAboutDriver"]</h1>
                        </div>
                        <form action="" method="post" enctype="multipart/form-data" id="createDriverForm">
                            @Html.ValidationSummary()
                            <h3 class="h3-header">@Localizer["PersonalInfo"]</h3>
                            <label class="big-label" for="">
                                @Localizer["FirstName"]
                                <span><abbr data-title="@Localizer["FirstNameLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input class="height-input" type="text" asp-for="FirstName" id="firstName">
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["LastName"]
                                <span><abbr data-title="@Localizer["LastNameLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input class="height-input" type="text" asp-for="LastName" id="lastName">
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["OwnerOperator"]
                                <span><abbr data-title="@Localizer["OwnerOperatorLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <select id="ownerOperation" asp-for="OwnerOperator" class="height-input input-select">
                                    <option value="Yes">@Localizer["Yes"]</option>
                                    <option value="No">@Localizer["No"]</option>
                                </select>
                            </label>
                            <label class="big-label" for="">
                                @Localizer["CompanyName"]
                                <span><abbr data-title="@Localizer["CompanyNameLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input class="height-input" type="text" asp-for="CompanyName" id="companyName">
                                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Language"]
                                <span><abbr data-title="@Localizer["LanguageLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input class="height-input" type="text" asp-for="Language" id="language">
                                @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Address"]
                                <span><abbr data-title="@Localizer["AddressLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input class="height-input" type="text" asp-for="Address" id="address">
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["City"]
                                <span><abbr data-title="@Localizer["CityLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input class="height-input" type="text" asp-for="City" id="city">
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["State"]
                                <span><abbr data-title="@Localizer["StateLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <select id="stateP" asp-for="State" class="height-input input-select">
                                    <option value="AL">Alabama</option>
                                    <option value="AK">Alaska</option>
                                    <option value="AZ">Arizona</option>
                                    <option value="AR">Arkansas</option>
                                    <option value="CA">California</option>
                                    <option value="CO">Colorado</option>
                                    <option value="CT">Connecticut</option>
                                    <option value="DE">Delaware</option>
                                    <option value="DC">District Of Columbia</option>
                                    <option value="FL">Florida</option>
                                    <option value="GA">Georgia</option>
                                    <option value="HI">Hawaii</option>
                                    <option value="ID">Idaho</option>
                                    <option value="IL">Illinois</option>
                                    <option value="IN">Indiana</option>
                                    <option value="IA">Iowa</option>
                                    <option value="KS">Kansas</option>
                                    <option value="KY">Kentucky</option>
                                    <option value="LA">Louisiana</option>
                                    <option value="ME">Maine</option>
                                    <option value="MD">Maryland</option>
                                    <option value="MA">Massachusetts</option>
                                    <option value="MI">Michigan</option>
                                    <option value="MN">Minnesota</option>
                                    <option value="MS">Mississippi</option>
                                    <option value="MO">Missouri</option>
                                    <option value="MT">Montana</option>
                                    <option value="NE">Nebraska</option>
                                    <option value="NV">Nevada</option>
                                    <option value="NH">New Hampshire</option>
                                    <option value="NJ">New Jersey</option>
                                    <option value="NM">New Mexico</option>
                                    <option value="NY">New York</option>
                                    <option value="NC">North Carolina</option>
                                    <option value="ND">North Dakota</option>
                                    <option value="OH">Ohio</option>
                                    <option value="OK">Oklahoma</option>
                                    <option value="OR">Oregon</option>
                                    <option value="PA">Pennsylvania</option>
                                    <option value="RI">Rhode Island</option>
                                    <option value="SC">South Carolina</option>
                                    <option value="SD">South Dakota</option>
                                    <option value="TN">Tennessee</option>
                                    <option value="TX">Texas</option>
                                    <option value="UT">Utah</option>
                                    <option value="VT">Vermont</option>
                                    <option value="VA">Virginia</option>
                                    <option value="WA">Washington</option>
                                    <option value="WV">West Virginia</option>
                                    <option value="WI">Wisconsin</option>
                                    <option value="WY">Wyoming</option>
                                </select>
                            </label>
                            <label class="big-label" for="">
                                @Localizer["ZipCode"]
                                <span><abbr data-title="@Localizer["ZipCodeLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input type="text" id="zipP" asp-for="ZipCode" maxlength="5" max="99999" pattern="@PatternConstants.ZipOnlyFiveDigits" placeholder="XXXXX - @Localizer["ZipCode"]">
                            </label>

                            <label class="big-label" id="dateOfBirthLabel" for="">
                                @Localizer["DateOfBirth"]
                                <span><abbr data-title="@Localizer["DateOfBirthLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input class="height-input" asp-for="DateOfBirth" id="dateOfBirth" type="text">
                                <p class="dob-not-current-format text-danger"></p>
                                @Html.ValidationMessageFor(model => model.DriverLicenseNumber, "", new { @class = "text-danger" })
                            </label>
                            <h3 class="h3-header">@Localizer["DriverLicenseInfo"]</h3>
                            <label class="big-label" for="">
                                @Localizer["DriverLicenseNumber"]
                                <span><abbr data-title="@Localizer["DriverLicenseNumberLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input class="height-input" asp-for="DriverLicenseNumber" id="driverNumber"  maxlength="30" type="text">
                                <span class="info-gray-message">@Localizer["DriverLicenseNumberInfoLabel"]</span>
                                @Html.ValidationMessageFor(model => model.DriverLicenseNumber, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["DriverLicenseState"]
                                <span><abbr data-title="@Localizer["DriverLicenseStateLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <select id="driverLicenseState" class="height-input input-select" asp-for="DriverLicenseState">
                                    <option value="AL">Alabama</option>
                                    <option value="AK">Alaska</option>
                                    <option value="AZ">Arizona</option>
                                    <option value="AR">Arkansas</option>
                                    <option value="CA">California</option>
                                    <option value="CO">Colorado</option>
                                    <option value="CT">Connecticut</option>
                                    <option value="DE">Delaware</option>
                                    <option value="DC">District Of Columbia</option>
                                    <option value="FL">Florida</option>
                                    <option value="GA">Georgia</option>
                                    <option value="HI">Hawaii</option>
                                    <option value="ID">Idaho</option>
                                    <option value="IL">Illinois</option>
                                    <option value="IN">Indiana</option>
                                    <option value="IA">Iowa</option>
                                    <option value="KS">Kansas</option>
                                    <option value="KY">Kentucky</option>
                                    <option value="LA">Louisiana</option>
                                    <option value="ME">Maine</option>
                                    <option value="MD">Maryland</option>
                                    <option value="MA">Massachusetts</option>
                                    <option value="MI">Michigan</option>
                                    <option value="MN">Minnesota</option>
                                    <option value="MS">Mississippi</option>
                                    <option value="MO">Missouri</option>
                                    <option value="MT">Montana</option>
                                    <option value="NE">Nebraska</option>
                                    <option value="NV">Nevada</option>
                                    <option value="NH">New Hampshire</option>
                                    <option value="NJ">New Jersey</option>
                                    <option value="NM">New Mexico</option>
                                    <option value="NY">New York</option>
                                    <option value="NC">North Carolina</option>
                                    <option value="ND">North Dakota</option>
                                    <option value="OH">Ohio</option>
                                    <option value="OK">Oklahoma</option>
                                    <option value="OR">Oregon</option>
                                    <option value="PA">Pennsylvania</option>
                                    <option value="RI">Rhode Island</option>
                                    <option value="SC">South Carolina</option>
                                    <option value="SD">South Dakota</option>
                                    <option value="TN">Tennessee</option>
                                    <option value="TX">Texas</option>
                                    <option value="UT">Utah</option>
                                    <option value="VT">Vermont</option>
                                    <option value="VA">Virginia</option>
                                    <option value="WA">Washington</option>
                                    <option value="WV">West Virginia</option>
                                    <option value="WI">Wisconsin</option>
                                    <option value="WY">Wyoming</option>
                                </select>
                            </label>
                            <label class="big-label" id="driverLicenseIssuedLabel" for="">
                                @Localizer["DriverLicenseIssued"]
                                <span><abbr data-title="@Localizer["DriverLicenseIssuedLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input type="date" id="driverLicenseIssued" asp-for="DateDriverLicenseIssued">
                                <p class="dob-not-current-format text-danger"></p>
                                @Html.ValidationMessageFor(model => model.DateDriverLicenseIssued, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" id="driverLicenseExpirationLabel" for="">
                                @Localizer["DriverLicenseExpiration"]
                                <span><abbr data-title="@Localizer["DriverLicenseExpirationLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input type="text" id="driverLicenseExpiration" asp-for="DateDriverLicenseExpiration">
                                <p class="dob-not-current-format text-danger"></p>
                                @Html.ValidationMessageFor(model => model.DateDriverLicenseExpiration, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" id="medicalCardExpirationLabel" for="">
                                @Localizer["MedicalCardExpiration"]
                                <span><abbr data-title="@Localizer["MedicalCardExpirationLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input type="text" id="medicalCardExpiration" asp-for="DateMedicalCardExpiration">
                                <p class="dob-not-current-format text-danger"></p>
                                @Html.ValidationMessageFor(model => model.DateMedicalCardExpiration, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Endorsements"]
                                <span><abbr data-title="@Localizer["EndorsementsLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input class="height-input" type="text" asp-for="Endorsements">
                                @Html.ValidationMessageFor(model => model.Endorsements, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Restrictions"]
                                <span><abbr data-title="@Localizer["RestrictionsLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input class="height-input" type="text" asp-for="Restrictions">
                                @Html.ValidationMessageFor(model => model.Restrictions, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Email"]
                                <span><abbr data-title="@Localizer["EmailLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input class="height-input" id="email" pattern="@PatternConstants.Email" type="email" asp-for="Email">
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </label>

                            <label class="big-label" for="">
                                @Localizer["SocialSecurity"]#
                                <span><abbr data-title="@Localizer["SocialSecurityLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input class="height-input" type="text" asp-for="SocialSecurity">
                                @Html.ValidationMessageFor(model => model.SocialSecurity, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Login"]
                                <span><abbr data-title="@Localizer["LoginLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input class="height-input" type="text" asp-for="Login" >
                                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Password"]
                                <span><abbr data-title="@Localizer["PasswordLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input class="height-input" type="text" asp-for="DriverControl.Password">
                                @Html.ValidationMessageFor(model => model.DriverControl.Password, "", new { @class = "text-danger" })
                            </label>
                            
                            <label class="big-label" for="">
                                @Localizer["PhoneNumber"]
                                <span><abbr data-title="@Localizer["PhoneNumberLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input class="height-input" type="text" asp-for="PhoneNumber.Number" placeholder="(XXX)-XXX-XXXX" id="phoneD" pattern="@PatternConstants.PhoneNumberWithoutCountryCode">
                                <input type="hidden" id="country-code-dialcode-driver" asp-for="PhoneNumber.DialCode">
                                <input type="hidden" id="country-code-iso2-driver" asp-for="PhoneNumber.Iso2">
                                <input type="hidden" id="country-code-name-driver" asp-for="PhoneNumber.Name">
                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                            </label>
                            <h3 class="h3-header">@Localizer["EmergencyContact"]</h3>
                            <label class="big-label" for="">
                                @Localizer["EmergencyContactName"]
                                <span><abbr data-title="@Localizer["EmergencyContactLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input class="height-input" type="text" asp-for="EmergencyContactName">
                                @Html.ValidationMessageFor(model => model.EmergencyContactName, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["EmergencyContactRelationship"]
                                <span><abbr data-title="@Localizer["EmergencyContactRelationshipLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input class="height-input" type="text" asp-for="EmergencyContactRelationship">
                                @Html.ValidationMessageFor(model => model.EmergencyContactRelationship, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["EmergencyPhoneNumber"]
                                <span><abbr data-title="@Localizer["EmergencyPhoneNumberLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                <input class="height-input" type="text" asp-for="EmergencyContactPhoneNumber.Number" placeholder="(XXX)-XXX-XXXX" id="phone" pattern="@PatternConstants.PhoneNumberWithoutCountryCode">
                                <input type="hidden" id="country-code-dialcode-emergency" asp-for="EmergencyContactPhoneNumber.DialCode">
                                <input type="hidden" id="country-code-iso2-emergency" asp-for="EmergencyContactPhoneNumber.Iso2">
                                <input type="hidden" id="country-code-name-emergency" asp-for="EmergencyContactPhoneNumber.Name">
                                @Html.ValidationMessageFor(model => model.EmergencyContactPhoneNumber, "", new { @class = "text-danger" })
                            </label>

                            <div class="full-label">
                                <a class="a-label">@Localizer["DocumentDL"]</a>
                                <div class="d-flex align-items-center wrap">
                                    <div class="file-group big-label mr-2 mb-2">
                                        <div class="row d-flex align-items-center inp-file-width">
                                            <div class="col-8 label-input">
                                                <div onclick="ClearFile(`fi1`, 'fl1');" class="fi" id="fl1"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDocument"]
                                                        <input class="height-input" id="fi1" type="file" onchange="GetFileName(this.value, 'fl1');" name="dLDoc" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <a>@Localizer["InfoMessageUploadFiles"]</a>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <a class="a-label">@Localizer["UploadMVR"]</a>
                                <div class="d-flex align-items-center wrap">
                                    <div class="file-group big-label mr-2 mb-2">
                                        <div class="row d-flex align-items-center inp-file-width">
                                            <div class="col-8 label-input">
                                                <div onclick="ClearFile(`fi10`, 'fl10');" class="fi" id="fl10"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDocument"]
                                                        <input class="height-input" id="fi10" type="file" onchange="GetFileName(this.value, 'fl10');" name="mvr" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <a>@Localizer["InfoMessageUploadFiles"]</a>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <a class="a-label">@Localizer["UploadFuelCard"]</a>
                                <div class="d-flex align-items-center wrap">
                                    <div class="file-group big-label mr-2 mb-2">
                                        <div class="row d-flex align-items-center inp-file-width">
                                            <div class="col-8 label-input">
                                                <div onclick="ClearFile(`fi11`, 'fl11');" class="fi" id="fl11"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDocument"]
                                                        <input class="height-input" id="fi11" type="file" onchange="GetFileName(this.value, 'fl11');" name="fuelCard" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <a>@Localizer["InfoMessageUploadFiles"]</a>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <a class="a-label">@Localizer["UploadCorpDocuments"]</a>
                                <div class="d-flex align-items-center wrap">
                                    <div class="file-group big-label mr-2 mb-2">
                                        <div class="row d-flex align-items-center inp-file-width">
                                            <div class="col-8 label-input">
                                                <div onclick="ClearFile(`fi12`, 'fl12');" class="fi" id="fl12"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDocument"]
                                                        <input class="height-input" id="fi12" type="file" onchange="GetFileName(this.value, 'fl12');" name="corpDocs" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <a>@Localizer["InfoMessageUploadFiles"]</a>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <a class="a-label">@Localizer["UploadW9W2"]</a>
                                <div class="d-flex align-items-center wrap">
                                    <div class="file-group big-label mr-2 mb-2">
                                        <div class="row d-flex align-items-center inp-file-width">
                                            <div class="col-8 label-input">
                                                <div onclick="ClearFile(`fi13`, 'fl13');" class="fi" id="fl13"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDocument"]
                                                        <input class="height-input" id="fi13" type="file" onchange="GetFileName(this.value, 'fl13');" name="w9w2" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <a>@Localizer["InfoMessageUploadFiles"]</a>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <a class="a-label">@Localizer["DocumentMedicalCard"]</a>
                                <div class="d-flex align-items-center wrap">
                                    <div class="file-group big-label mr-2 mb-2">
                                        <div class="row d-flex align-items-center inp-file-width">
                                            <div class="col-8 label-input">
                                                <div onclick="ClearFile(`fi2`, 'fl2');" class="fi" id="fl2"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDocument"]
                                                        <input class="height-input" id="fi2" type="file" onchange="GetFileName(this.value, 'fl2');" name="medicalCardDoc" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <a>@Localizer["InfoMessageUploadFiles"]</a>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <a class="a-label">@Localizer["DocumentSSN"]</a>
                                <div class="d-flex align-items-center wrap">
                                    <div class="file-group big-label mr-2 mb-2">
                                        <div class="row d-flex align-items-center inp-file-width">
                                            <div class="col-8 label-input">
                                                <div onclick="ClearFile(`fi3`, 'fl3');" class="fi" id="fl3"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDocument"]
                                                        <input class="height-input" id="fi3" type="file" onchange="GetFileName(this.value, 'fl3');" name="sSNDoc" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <a>@Localizer["InfoMessageUploadFiles"]</a>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <a class="a-label">@Localizer["DocumentProofOfWork"]</a>
                                <div class="d-flex align-items-center wrap">
                                    <div class="file-group big-label mr-2 mb-2">
                                        <div class="row d-flex align-items-center inp-file-width">
                                            <div class="col-8 label-input">
                                                <div onclick="ClearFile(`fi4`, 'fl4');" class="fi" id="fl4"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDocument"]
                                                        <input class="height-input" id="fi4" type="file" onchange="GetFileName(this.value, 'fl4');" name="proofOfWorkAuthorizationOrGCDoc" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <a>@Localizer["InfoMessageUploadFiles"]</a>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <a class="a-label">@Localizer["DocumentDQL"]</a>
                                <div class="d-flex align-items-center wrap">
                                    <div class="file-group big-label mr-2 mb-2">
                                        <div class="row d-flex align-items-center inp-file-width">
                                            <div class="col-md-8 label-input">
                                                <div onclick="ClearFile(`fi5`, 'fl5');" class="fi" id="fl5"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDocument"]
                                                        <input class="height-input" id="fi5" type="file" onchange="GetFileName(this.value, 'fl5');" name="dQLDoc" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <a>@Localizer["InfoMessageUploadFiles"]</a>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <a class="a-label">@Localizer["DocumentContract"]</a>
                                <div class="d-flex align-items-center wrap">
                                    <div class="file-group big-label mr-2 mb-2">
                                        <div class="row d-flex align-items-center inp-file-width">
                                            <div class="col-md-8 label-input">
                                                <div onclick="ClearFile(`fi6`, 'fl6');" class="fi" id="fl6"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDocument"]
                                                        <input class="height-input" id="fi6" onchange="GetFileName(this.value, 'fl6');" type="file" name="contractDoc" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <a>@Localizer["InfoMessageUploadFiles"]</a>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <a class="a-label">@Localizer["DocumentDrugTest"]</a>
                                <div class="d-flex align-items-center wrap">
                                    <div class="file-group big-label mr-2 mb-2">
                                        <div class="row d-flex align-items-center inp-file-width">
                                            <div class="col-md-8 label-input">
                                                <div onclick="ClearFile(`fi7`, 'fl7');" class="fi" id="fl7"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDocument"]
                                                        <input class="height-input" id="fi7" onchange="GetFileName(this.value, 'fl7');" type="file" name="drugTestResultsDoc" accept="application/pdf, image/jpeg, image/jpg" >
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <a>@Localizer["InfoMessageUploadFiles"]</a>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <input type="hidden" value="" name="dateTimeLocal"/>
                            <input type="submit" value="@Localizer["SaveInfo"]" class="height-input btn1 big-label big-font-size"/>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

<script src="~/js/input-replacer.js"></script>
<script>

    setReplacer(document.querySelector('#firstName'), @ExpressionConstants.OnlyLetters);
    setReplacer(document.querySelector('#lastName'), @ExpressionConstants.OnlyLetters);
    setReplacer(document.querySelector('#driverNumber'), /\-/);

    $.fn.setCursorPosition = function (pos) {
        if ($(this).get(0).setSelectionRange) {
            $(this).get(0).setSelectionRange(pos, pos);
        }
        else if ($(this).get(0).createTextRange) {
            var range = $(this).get(0).createTextRange();
            range.collapse(true);
            range.moveEnd('character', pos);
            range.moveStart('character', pos);
            range.select();
        }
    };

    $(document).ready(function () {
         $("#phoneD").mask("(999)-999-9999", { placeholder: "(XXX)-XXX-XXXX" });
        $("#phone").mask("(999)-999-9999", { placeholder: "(XXX)-XXX-XXXX" });

        if (!$("#country-code-iso2-driver").val()) {
            $("#country-code-iso2-driver").val("us")
            $("#country-code-dialcode-driver").val("1")
            $("#country-code-name-driver").val("United States")
        }
        
        if (!$("#country-code-iso2-emergency").val()) {
            $("#country-code-iso2-emergency").val("us")
            $("#country-code-dialcode-emergency").val("1")
            $("#country-code-name-emergency").val("United States")
        }

        var phone = $("#phoneD");
        phone.intlTelInput({
            initialCountry: $("#country-code-iso2-driver").val() ? $("#country-code-iso2-driver").val() : "us",
            separateDialCode: true,
        });
        
        var phoneE = $("#phone");
        phone.intlTelInput({
            initialCountry: $("#country-code-iso2-emergency").val() ? $("#country-code-iso2-emergency").val() : "us",
            separateDialCode: true,
        });

        phone.on("countrychange", function (e, countryData) {
            $("#country-code-dialcode-driver").val(countryData.dialCode);
            $("#country-code-iso2-driver").val(countryData.iso2);
            $("#country-code-name-driver").val(countryData.name);
        });
        
        phoneE.on("countrychange", function (e, countryData) {
            $("#country-code-dialcode-driver-emergency").val(countryData.dialCode);
            $("#country-code-iso2-driver-emergency").val(countryData.iso2);
            $("#country-code-name-driver-emergency").val(countryData.name);
        });
    });

     $('input[name="DateOfBirth"]').on('click', function () {
        $(this).setCursorPosition(0);
    });

    $("#dateOfBirth").mask("99/99/9999", { placeholder: "MM/DD/YYYY" });  
    $("#driverLicenseExpiration").mask("99/99/9999", { placeholder: "MM/DD/YYYY" });
    $("#medicalCardExpiration").mask("99/99/9999", { placeholder: "MM/DD/YYYY" });

    $('#email').on('input invalid', function () {
        this.setCustomValidity('')
        if (this.validity.valueMissing) {
            this.setCustomValidity("@Localizer["EmailValidMessage"]")
        }
        if (this.validity.typeMismatch) {
            this.setCustomValidity("@Localizer["EmailValidMessage"]")
        }
        if (this.validity.patternMismatch) {
            this.setCustomValidity("@Localizer["EmailValidMessage"]")
        }
    });

    $("#fi1").change(function () {
        CheckValid('fl1', 'fi1');
    });

    $("#fi2").change(function () {
        CheckValid('fl2', 'fi2');
    });

    $("#fi3").change(function () {
        CheckValid('fl3', 'fi3');
    });

    $("#fi4").change(function () {
        CheckValid('fl4', 'fi4');
    });

    $("#fi5").change(function () {
        CheckValid('fl5', 'fi5');
    });

    $("#fi6").change(function () {
        CheckValid('fl6', 'fi6');
    });

    $("#fi7").change(function () {
        CheckValid('fl7', 'fi7');
    });
    
    $("#fi10").change(function () {
        CheckValid('fl10', 'fi10');
    });
    
    $("#fi11").change(function () {
        CheckValid('fl11', 'fi11');
    });
    $("#fi12").change(function () {
        CheckValid('fl12', 'fi12');
    }); $("#fi13").change(function () {
        CheckValid('fl13', 'fi13');
    });

    const dateInput = document.querySelector("[name='dateTimeLocal']");

    $("input[type=submit]").on('click', function (e) {
        CheckValid('fl1', 'fi1');
        CheckValid('fl2', 'fi2');
        CheckValid('fl3', 'fi3');
        CheckValid('fl4', 'fi4');
        CheckValid('fl5', 'fi5');
        CheckValid('fl6', 'fi6');
        CheckValid('fl7', 'fi7');
        CheckValid('fl13', 'fi13'); CheckValid('fl12', 'fi12'); CheckValid('fl11', 'fi11'); CheckValid('fl10', 'fi10');
        //CheckValidDoB(e, "dateOfBirthLabel", "dateOfBirth", "dob-not-current-format");
        //CheckValidDoB(e, "driverLicenseIssuedLabel", "driverLicenseIssued", "dob-not-current-format");
        //CheckValidExp(e, "driverLicenseExpirationLabel", "driverLicenseExpiration", "dob-not-current-format");
        //CheckValidExp(e, "medicalCardExpirationLabel", "medicalCardExpiration", "dob-not-current-format");

        dateInput.value = GetDateTimeInFormat(new Date());
    });
</script>

<style>
    .intl-tel-input {
        width: 100%;
    }

    .Billing .table .td input, .Billing .table .td select {
        text-align: center;
        width: 95%;
        padding: 6px 0;
        border: 1px solid #c4c9d5;
        border-radius: 10px !important;
        background: #fff;
        margin: 0;
        font-weight: 400;
        color: #007bff;
        font-size: 20px;
    }

    .h3-header {
        font-size: 20px;
        color: black;
        font-weight: 600;
        margin-bottom: 10px;
    }
</style>