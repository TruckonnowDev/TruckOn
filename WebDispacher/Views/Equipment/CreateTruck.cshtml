@using Microsoft.AspNetCore.Mvc.Localization
@using WebDispacher.Constants;
@using WebDispacher.Service;

@inject IViewLocalizer Localizer

@model WebDispacher.ViewModels.Truck.TruckViewModel;
@{
    ViewData["Title"] = "Create Truck";
}

<body>
    <div class="admin truc">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <div class="tabContent">
                        <div class="title">
                            <a href="#" onclick="history.back();">@Localizer["BackToEquipment"]</a>
                        </div>
                        <div class="title">
                            <h1 class="text-info-header-1">@Localizer["AddNewTruck"]</h1>
                        </div>
                        <form onsubmit="formatBeforeSubmit();" action="" method="post" enctype="multipart/form-data">
                            @Html.ValidationSummary()
                            <label class="big-label" for="">
                                @Localizer["NameTruck"]
                                <input class="height-input" id="name" type="text" asp-for="NameTruck" maxlength="25">
                                @Html.ValidationMessageFor(model => model.NameTruck, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Year"]
                                <input class="height-input" id="year" type="text" asp-for="Year" maxlength="4">
                                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Make"]
                                <input class="height-input" id="make" type="text" asp-for="Make" maxlength="15">
                                @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Model"]
                                <input class="height-input" id="model" type="text" asp-for="Model" maxlength="20">
                                @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                            </label>
                            @* onchange="SelectTruck(this.options[this.selectedIndex].value)" *@
                            <label class="big-label" for="">
                                @Localizer["VehicleCategory"] <br />
                                <select class="height-input input-select" asp-for="VehicleCategoryId" id="vehicleCategoryDropdown">
                                    <option value="" >@Localizer["ChooseVehicleCategory"]</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.VehicleCategoryId, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["TypeTruck"] <br />
                                <select class="height-input input-select" asp-for="TruckTypeId" id="truckTypeDropdown">
                                    <option value="">@Localizer["ChooseTruckType"]</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.TruckTypeId, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Vin"]#
                                <input class="height-input" type="text" asp-for="Vin" maxlength="17">
                                @Html.ValidationMessageFor(model => model.Vin, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["PlateTruck"]
                                <input class="height-input" type="text" asp-for="PlateTruck" maxlength="10">
                                @Html.ValidationMessageFor(model => model.PlateTruck, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["PlateExp"]
                                <input class="height-input" type="text" id="plateExp" asp-for="Exp" pattern="[0-9]{2}/[0-9]{2}">
                                @Html.ValidationMessageFor(model => model.Exp, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["State"]
                                <select class="height-input input-select" id="stateP" asp-for="State">
                                    <option value="AL">Alabama</option>
                                    <option value="AK">Alaska</option>
                                    <option value="AZ">Arizona</option>
                                    <option value="AR">Arkansas</option>
                                    <option value="CA">California</option>
                                    <option value="CO">Colorado</option>
                                    <option value="CT">Connecticut</option>
                                    <option value="DE">Delaware</option>
                                    <option value="DC">District Of Columbia</option>
                                    <option value="FL">Florida</option>
                                    <option value="GA">Georgia</option>
                                    <option value="HI">Hawaii</option>
                                    <option value="ID">Idaho</option>
                                    <option value="IL">Illinois</option>
                                    <option value="IN">Indiana</option>
                                    <option value="IA">Iowa</option>
                                    <option value="KS">Kansas</option>
                                    <option value="KY">Kentucky</option>
                                    <option value="LA">Louisiana</option>
                                    <option value="ME">Maine</option>
                                    <option value="MD">Maryland</option>
                                    <option value="MA">Massachusetts</option>
                                    <option value="MI">Michigan</option>
                                    <option value="MN">Minnesota</option>
                                    <option value="MS">Mississippi</option>
                                    <option value="MO">Missouri</option>
                                    <option value="MT">Montana</option>
                                    <option value="NE">Nebraska</option>
                                    <option value="NV">Nevada</option>
                                    <option value="NH">New Hampshire</option>
                                    <option value="NJ">New Jersey</option>
                                    <option value="NM">New Mexico</option>
                                    <option value="NY">New York</option>
                                    <option value="NC">North Carolina</option>
                                    <option value="ND">North Dakota</option>
                                    <option value="OH">Ohio</option>
                                    <option value="OK">Oklahoma</option>
                                    <option value="OR">Oregon</option>
                                    <option value="PA">Pennsylvania</option>
                                    <option value="RI">Rhode Island</option>
                                    <option value="SC">South Carolina</option>
                                    <option value="SD">South Dakota</option>
                                    <option value="TN">Tennessee</option>
                                    <option value="TX">Texas</option>
                                    <option value="UT">Utah</option>
                                    <option value="VT">Vermont</option>
                                    <option value="VA">Virginia</option>
                                    <option value="WA">Washington</option>
                                    <option value="WV">West Virginia</option>
                                    <option value="WI">Wisconsin</option>
                                    <option value="WY">Wyoming</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Color"]
                                <input class="height-input" id="color" type="text" asp-for="ColorTruck" maxlength="15">
                                @Html.ValidationMessageFor(model => model.ColorTruck, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Owner"]
                                <input class="height-input" id="owner" type="text" asp-for="Owner" maxlength="25">
                                @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
                            </label>
                            <div class="big-label">
                                <div class="full-label">
                                    <p class="a-label">@Localizer["TruckRegistration"]</p>
                                    <a class="pt-1 pb-1">@Localizer["InfoMessageUploadFiles"]</a>
                                    <div>
                                        <div class="file-group big-label">
                                            <div class="row">
                                                <div class="col-8 label-input d-flex align-items-center">
                                                    <div onclick="ClearFile(`fi1`, 'fl1');" class="fi" id="fl1"></div>
                                                </div>
                                                <div class="col-4 select-doc">
                                                    <div class="select-button-1 d-flex justify-content-end">
                                                        <label>
                                                            @Localizer["SelectDoc"]
                                                            <input class="height-input" id="fi1" onchange="GetFileName(this.value, 'fl1');" type="file" name="truckRegistrationDoc" accept="application/pdf, image/jpeg, image/jpg">
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <p class="file-limit-exceeded text-danger"></p>
                                    </div>
                                </div>
                            </div>
                            <div class="full-label">
                                <p class="a-label">@Localizer["TruckLeaseAgreement"]</p>
                                <a class="pt-1 pb-1">@Localizer["InfoMessageUploadFiles"]</a>
                                <div>
                                    <div class="file-group big-label">
                                        <div class="row">
                                            <div class="col-8 label-input d-flex align-items-center">
                                                <div onclick="ClearFile(`fi2`, 'fl2');" class="fi" id="fl2"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDoc"]
                                                        <input class="height-input" id="fi2" onchange="GetFileName(this.value, 'fl2');" type="file" name="truckLeaseAgreementDoc" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <p class="a-label">@Localizer["TruckAnnualIns"]</p>
                                <a class="pt-1 pb-1">@Localizer["InfoMessageUploadFiles"]</a>
                                <div>
                                    <div class="file-group big-label">
                                        <div class="row">
                                            <div class="col-8 label-input d-flex align-items-center">
                                                <div onclick="ClearFile(`fi3`, 'fl3');" class="fi" id="fl3"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDoc"]
                                                        <input class="height-input" id="fi3" onchange="GetFileName(this.value, 'fl3');" type="file" name="truckAnnualInspection" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <p class="a-label">@Localizer["BobTailPhysicalDamage"]</p>
                                <a class="pt-1 pb-1">@Localizer["InfoMessageUploadFiles"]</a>
                                <div>
                                    <div class="file-group big-label">
                                        <div class="row">
                                            <div class="col-8 label-input d-flex align-items-center">
                                                <div onclick="ClearFile(`fi4`, 'fl4');" class="fi" id="fl4"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDoc"]
                                                        <input class="height-input" id="fi4" onchange="GetFileName(this.value, 'fl4');" type="file" name="bobTailPhysicalDamage" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <p class="a-label">@Localizer["NyHut"] (@Localizer["OptionalForNyRolling"])</p>
                                <a class="pt-1 pb-1">@Localizer["InfoMessageUploadFiles"]</a>
                                <div>
                                    <div class="file-group big-label">
                                        <div class="row">
                                            <div class="col-8 label-input d-flex align-items-center">
                                                <div onclick="ClearFile(`fi5`, 'fl5');" class="fi" id="fl5"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDoc"]
                                                        <input class="height-input" id="fi5" onchange="GetFileName(this.value, 'fl5');" type="file" accept="application/pdf, image/jpeg, image/jpg" name="nYHUTDoc">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <input type="hidden" value="" name="dateTimeLocal" />
                            <button id="button-save" class="btn1 big-label height-input big-font-size">@Localizer["SaveInfo"]</button>
                        </form>
                    </div>
                </div>
                <div class="col-md-6 image-col-place">
                    
                </div>
                
            </div>
        </div>
    </div>
</body>

<script>
    $(document).ready(function () {
        $("#truckTypeDropdown").change(function () {
            var selectedText = $("#truckTypeDropdown option:selected").text();
            if (selectedText) {
                $.ajax({
                    url: `/Equipment/GetTruckSlug?vehicleName=${selectedText}`,
                    method: 'GET',
                    success: function (data) {
                        var slug = data;

                        // Теперь, когда у нас есть slug, делаем второй запрос
                        $.ajax({
                            url: `/Equipment/GetImages?vehicleSlug=${slug}`,
                            method: 'GET',
                            success: function (data) {
                                console.log(data);
                                var imageColPlace = $(".image-col-place");
                                imageColPlace.empty();

                                data.forEach(function (fileName) {
                                    var srcPhoto = `@Config.BaseReqvesteUrl/Equipment/Image?name=../TruckPattern/${slug}/${fileName}&type=png`;
                                    var imageElement = `<div class="col-md-auto m-2"><img src="${srcPhoto}" alt=""></div>`;
                                    imageColPlace.append(imageElement);
                                });
                            },
                            error: function () {
                            }
                        });
                    },
                    error: function () {
                    }
                });
            }
        });

        var loadTruckTypesUrl = "/Equipment/GetTruckTypes";

        $("#vehicleCategoryDropdown").change(function () {
            var categoryId = $(this).val();
            console.log("сработало событие изменения категории авто")
            $.ajax({
                url: loadTruckTypesUrl,
                data: { categoryId: categoryId },
                method: 'GET',
                success: function (data) {
                    var truckTypeDropdown = $('#truckTypeDropdown');
                    truckTypeDropdown.empty();

                    truckTypeDropdown.append($('<option>', {
                        value: '',
                        text: '@Localizer["ChooseTruckType"]'
                    }));

                    $.each(data, function (index, item) {
                        truckTypeDropdown.append($('<option>', {
                            value: item.id,
                            text: item.name
                        }));
                    });

                    if (selectedTruckTypeId) {
                        if (truckTypeDropdown.find('option[value="' + selectedTruckTypeId + '"]').length > 0) {
                            truckTypeDropdown.val(selectedTruckTypeId);
                            truckTypeDropdown.change();
                        }
                    }
                }
            });
        });

        var selectedVehicleCategoryId = "@ViewData["SelectedVehicleCategoryId"]";
        var selectedTruckTypeId = "@ViewData["SelectedTruckTypeId"]";

        $.ajax({
            url: '/Equipment/GetVehicleCategiries',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                var categoryDropdown = $('#vehicleCategoryDropdown');
                categoryDropdown.empty();
                categoryDropdown.append($('<option>', {
                    value: '',
                    text: '@Localizer["ChooseVehicleCategory"]'
                }));


                $.each(data, function (index, item) {
                    categoryDropdown.append($('<option>', {
                        value: item.id,
                        text: item.name
                    }));
                });

                if (selectedVehicleCategoryId) {
                    if (categoryDropdown.find('option[value="' + selectedVehicleCategoryId + '"]').length > 0) {
                        categoryDropdown.val(selectedVehicleCategoryId);
                    }
                }
                categoryDropdown.change();
            },
            error: function () {
            }
        });
    });

$(document).ready(function () {
        

    
});
</script>


<script>
    function formatBeforeSubmit() {
        const input = document.getElementById('plateExp');
        const parts = input.value.split('/');
        if (parts.length === 2) {
            input.value = parts[0] + '.01.' + '.20' + parts[1];
        }
    }
</script>
<script src="~/js/input-replacer.js"></script>
<script>
    setReplacer(document.querySelector('#year'), @ExpressionConstants.OnlyDigits);
    setReplacer(document.querySelector('#name'), @ExpressionConstants.OnlyLettersDigitsDashes);
    setReplacer(document.querySelector('#make'), @ExpressionConstants.OnlyLetters);
    setReplacer(document.querySelector('#model'), @ExpressionConstants.OnlyLettersDigitsDashes);
    setReplacer(document.querySelector('#color'), @ExpressionConstants.OnlyLetters);
    setReplacer(document.querySelector('#owner'), @ExpressionConstants.OnlyLetters);

    const dateInput = document.querySelector("[name='dateTimeLocal']");

    $("#fi1").change(function () {
        CheckValid('fl1', 'fi1');
    });

    $("#fi2").change(function () {
        CheckValid('fl2', 'fi2');
    });
    
    $("#fi3").change(function () {
        CheckValid('fl3', 'fi3');
    });
    
    $("#fi4").change(function () {
        CheckValid('fl4', 'fi4');
    });
    
    $("#fi5").change(function () {
        CheckValid('fl5', 'fi5');
    });

    $(".big-font-size").on('click', function () {
        CheckValid('fl1', 'fi1');
        CheckValid('fl2', 'fi2');
        CheckValid('fl3', 'fi3');
        CheckValid('fl4', 'fi4');
        CheckValid('fl5', 'fi5');

        dateInput.value = GetDateTimeInFormat(new Date());
    });

    $(function () {
        $("#plateExp").mask("99/99", { placeholder: "MM/YY" });
    });

    var curentSelectPattern;

    function SelectTruck(value) {
        if (curentSelectPattern || value == "") {
            curentSelectPattern.style.display = "none";
            curentSelectPattern.style.justifyContent = "unset";
            curentSelectPattern.style.alignItems = "unset";
        }
        let selectTypeDiv = document.getElementById(value);
        if (selectTypeDiv) {
            selectTypeDiv.style.display = "flex";
            selectTypeDiv.style.justifyContent = "center";
            selectTypeDiv.style.alignItems = "center";
            curentSelectPattern = selectTypeDiv;
        }
    }
</script>