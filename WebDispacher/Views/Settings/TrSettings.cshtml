@using Microsoft.AspNetCore.Mvc.Localization

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "Truck Settings";
}

<body>
    <div class="cars">
        <div class="container">
            <div class="row">
                <div class="admin">
                    <div class="col-md-12">
                        <a href="/Equipment/Trucks">@Localizer["BackToEquipment"]</a>
                        <div class="title">
                            <h1 class="text-info-header-1">@Localizer["CustomizeTheLayout"]</h1>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 admin">
                    <div id="tabs">
                        @foreach (var SetingTruck in ViewBag.SetingsTruck)
                        {
                            if (SetingTruck.IsSelect)
                            {
                                <div class="tab whiteborder">
                                    <span onclick="window.location.href='@Url.Action("", "Settings")?idTr=@ViewBag.IdTr&idProfile=@SetingTruck.Id&typeTransport=@SetingTruck.TypeTransportVehikle';"
                                          ondblclick="window.location.href='@Url.Action("", "Settings")/RemoveProfile?idProfile=+ @SetingTruck.Id&typeTransport=@SetingTruck.TypeTransportVehikle&idTr=@ViewBag.IdTr';">@SetingTruck.Name</span>
                                        <input style="margin-left:10px;" type="radio" name="tabSet" checked="@SetingTruck.IsUsed" onclick="SelectProfile(@SetingTruck.Id, '@SetingTruck.TypeTransportVehikle', @ViewBag.IdTr)">
                                    </div>
                                }
                                else
                                {
                                    <div class="tab">
                                        <span onclick="window.location.href='@Url.Action("", "Settings")?idTr=@ViewBag.IdTr&idProfile=@SetingTruck.Id&typeTransport=@SetingTruck.TypeTransportVehikle';"
                                              ondblclick="window.location.href='@Url.Action("", "Settings")/RemoveProfile?idProfile=+ @SetingTruck.Id&typeTransport=@SetingTruck.TypeTransportVehikle&idTr=@ViewBag.IdTr';">@SetingTruck.Name</span>
                                            <input style="margin-left:10px;" type="radio" name="tabSet" checked="@SetingTruck.IsUsed" onclick="SelectProfile(@SetingTruck.Id, '@SetingTruck.TypeTransportVehikle', @ViewBag.IdTr)">
                                        </div>
                                    }
                                }
                        <img class="tab-add-elem" src="~/img/addCross.svg" onclick="window.location.href='@Url.Action("AddProfile", "Settings")?idTr=@ViewBag.IdTr&typeTransport=@ViewBag.TypeTransport'" />
                        <div class="tabContent">
                            <div class="row">
                                @foreach (var layout in ViewBag.SelectSetingTruck.TransportVehicle.Layouts)
                                {
                                    <div class="col-md-3">
                                        <div class="img">
                                            <span>@layout.Name</span>
                                            @if (layout.IsUsed)
                                            {
                                                <img style="width:90%;" id="img_@layout.Id" src="@ViewBag.BaseUrl/Settings/Image?name=../@ViewBag.Pattern/@ViewBag.SelectSetingTruck.TransportVehicle.Type/@ViewBag.SelectSetingTruck.TransportVehicle.Type@layout.Index&type=png" alt="">
                                            }
                                            else
                                            {
                                                <img style="opacity: 0.4;width: 90%;" id="img_@layout.Id" src="@ViewBag.BaseUrl/Settings/Image?name=../@ViewBag.Pattern/@ViewBag.SelectSetingTruck.TransportVehicle.Type/@ViewBag.SelectSetingTruck.TransportVehicle.Type@layout.Index&type=png" alt="">
                                            }
                                            @if (ViewBag.SelectSetingTruck.IsChange)
                                            {
                                                @if (layout.OrdinalIndex != 1)
                                                {
                                                    <img src="~/img/prev.svg" alt="" style="margin-right: 20px" onclick="MovingLayoutUP(@layout.Id, @ViewBag.SelectSetingTruck.TransportVehicle.Id, this)" />
                                                }
                                                @if (layout.IsUsed)
                                                {
                                                    <img src="~/img/glass.svg" alt="" onclick="CheckChange(this.src, @layout.Id, this)" />
                                                }
                                                else
                                                {
                                                    <img src="~/img/glass-not.svg" alt="" onclick="CheckChange(this.src, @layout.Id, this)" />
                                                }
                                                @if (layout.OrdinalIndex != ViewBag.SelectSetingTruck.TransportVehicle.Layouts.Count)
                                                {
                                                    <img src="~/img/next.svg" alt="" style="margin-left: 20px" onclick="MovingLayoutDown(@layout.Id, @ViewBag.SelectSetingTruck.TransportVehicle.Id, this)">
                                                }
                                            }

                                        </div>
                                    </div>
                                }

                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <button onclick="window.location.href='@ViewBag.BaseUrl/Settings/Trucks'" class="text-info-header-2 btn1">@Localizer["UseTheseSettings"]</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

<script>
    function CheckChange(url, idLayout, img) {
        let imgElment = document.getElementById("img_" + idLayout);
        if (url.includes("glass-not")) {
            imgElment.style.opacity = "1";
            img.src = "@ViewBag.BaseUrl/img/glass.svg";
        }
        else {
            imgElment.style.opacity = "0.4";
            img.src = "@ViewBag.BaseUrl/img/glass-not.svg";
        }
        let xmlHttp = new XMLHttpRequest();
        var body = 'idLayout=' + encodeURIComponent(idLayout);
        if (!url.includes("glass-not")) {
            url = "@ViewBag.BaseUrl/Settings/UnSelectLayout";
        }
        else {
            url = "@ViewBag.BaseUrl/Settings/SelectLayout";
        }
        xmlHttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status != 200) {
                alert("@Localizer["ServerErrorMessage"]");
            }
        };
        xmlHttp.open("POST", url, true);
        xmlHttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        xmlHttp.send(body);
    }

    function MovingLayoutUP(idLayout, idTransported, arrowElem) {
        let url = "@ViewBag.BaseUrl/Settings/LayoutUP";
        let xmlHttp = new XMLHttpRequest();
        var body = 'idLayout=' + encodeURIComponent(idLayout) +
            '&idTransported=' + encodeURIComponent(idTransported);
        xmlHttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status != 200) {
                alert("@Localizer["ServerErrorMessage"]");
            }
            else if (this.readyState == 4 && this.status == 200) {
                let arrow = arrowElem.parentNode.parentNode.previousElementSibling;
                let arrow1 = arrowElem.parentNode.parentNode;
                arrow.before(arrow1, arrow)
            }
        };
        xmlHttp.open("POST", url, true);
        xmlHttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        xmlHttp.send(body);
    }

    function MovingLayoutDown(idLayout, idTransported, arrowElem) {
        let url = "@ViewBag.BaseUrl/Settings/LayoutDown";
        let xmlHttp = new XMLHttpRequest();
        var body = 'idLayout=' + encodeURIComponent(idLayout) +
            '&idTransported=' + encodeURIComponent(idTransported);
        xmlHttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status != 200) {
                alert("@Localizer["ServerErrorMessage"]");
            }
            else if (this.readyState == 4 && this.status == 200) {
                let arrow = arrowElem.parentNode.parentNode.nextElementSibling;
                let arrow1 = arrowElem.parentNode.parentNode;
                arrow.before(arrow, arrow1)
            }
        };
        xmlHttp.open("POST", url, true);
        xmlHttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        xmlHttp.send(body);
    }

    function draw(elem, step, direction) {
        if (direction == 0) {
            elem.style.bottom = step + "px"
        }
        else {
            elem.style.top = step + "px"
        }
    }

    function SelectProfile(idProfile, typeTransport, idTr) {
        let url = "@ViewBag.BaseUrl/Settings/SelectProfile";
        let xmlHttp = new XMLHttpRequest();
        var body = 'idProfile=' + encodeURIComponent(idProfile)
            + "&typeTransport=" + encodeURIComponent(typeTransport)
        + "&idTr=" + encodeURIComponent(idTr);
        xmlHttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status != 200) {
                alert("@Localizer["ServerErrorMessage"]");
            }
            else if (this.readyState == 4 && this.status == 200) {

            }
        };
        xmlHttp.open("POST", url, true);
        xmlHttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        xmlHttp.send(body);
    }
</script>

<style>
    .tab-add-elem {
        padding-left: 1%;
        cursor: pointer;
    }
</style>