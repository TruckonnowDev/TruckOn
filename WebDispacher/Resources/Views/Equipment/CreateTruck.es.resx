<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Vin" xml:space="preserve">
    <value>Vin</value>
  </data>
  <data name="AddNewTruck" xml:space="preserve">
    <value>Añadir Camión Nuevo</value>
  </data>
  <data name="BackToEquipment" xml:space="preserve">
    <value>Volver a Equipamiento</value>
  </data>
  <data name="BobTailPhysicalDamage" xml:space="preserve">
    <value>Daño físico de Bob tail</value>
  </data>
  <data name="ChooseTruckType" xml:space="preserve">
    <value>Elija un tipo de camión</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="InfoMessageUploadFiles" xml:space="preserve">
    <value>Puede cargar archivos solo en pdf, jpg y jpeg (el tamaño máximo de archivo de carga es de 5 MB)</value>
  </data>
  <data name="Make" xml:space="preserve">
    <value>Hacer</value>
  </data>
  <data name="Model" xml:space="preserve">
    <value>Modelo</value>
  </data>
  <data name="NameTruck" xml:space="preserve">
    <value>Unidad</value>
  </data>
  <data name="NyHut" xml:space="preserve">
    <value>CABAÑA NY</value>
  </data>
  <data name="Optional" xml:space="preserve">
    <value>opcional</value>
  </data>
  <data name="OptionalForNyRolling" xml:space="preserve">
    <value>opcional para el balanceo de NY</value>
  </data>
  <data name="Owner" xml:space="preserve">
    <value>Propietario</value>
  </data>
  <data name="PlateExp" xml:space="preserve">
    <value>Exp de Placa</value>
  </data>
  <data name="PlateTruck" xml:space="preserve">
    <value>Camión de Placas</value>
  </data>
  <data name="SaveInfo" xml:space="preserve">
    <value>Guardar Información</value>
  </data>
  <data name="SelectDoc" xml:space="preserve">
    <value>Seleccionar documento</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>Estado</value>
  </data>
  <data name="TruckAnnualIns" xml:space="preserve">
    <value>Inspección anual de camiones</value>
  </data>
  <data name="TruckLeaseAgreement" xml:space="preserve">
    <value>Contrato de arrendamiento de camión</value>
  </data>
  <data name="TruckRegistration" xml:space="preserve">
    <value>Registro de camiones</value>
  </data>
  <data name="TypeTruck" xml:space="preserve">
    <value>Tipo de Unidad</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Año</value>
  </data>
  <data name="VehicleCategory" xml:space="preserve">
    <value>Clase de Unidad</value>
  </data>
  <data name="ChooseVehicleCategory" xml:space="preserve">
    <value>Elija un tipo de vehículo</value>
  </data>
  <data name="ChooseTruckStatus" xml:space="preserve">
    <value>Seleccione el estado del camión</value>
  </data>
  <data name="TruckStatus" xml:space="preserve">
    <value>Estado del Camión</value>
  </data>
  <data name="TruckStatusActive" xml:space="preserve">
    <value>Activo</value>
  </data>
  <data name="TruckStatusBroken" xml:space="preserve">
    <value>Roto</value>
  </data>
  <data name="TruckStatusDamaged" xml:space="preserve">
    <value>Dañado</value>
  </data>
  <data name="TruckStatusDealership" xml:space="preserve">
    <value>Concesionario</value>
  </data>
  <data name="TruckStatusEmergency" xml:space="preserve">
    <value>Emergencia</value>
  </data>
  <data name="TruckStatusInactive" xml:space="preserve">
    <value>Inactivo</value>
  </data>
  <data name="TruckStatusShop" xml:space="preserve">
    <value>Tienda</value>
  </data>
  <data name="TruckStatusTowYard" xml:space="preserve">
    <value>Patio de Remolque</value>
  </data>
  <data name="NameTruckLabelInfo" xml:space="preserve">
    <value>Impulsa la Imaginación con un Nombre Cautivador</value>
  </data>
  <data name="ModelLabelInfo" xml:space="preserve">
    <value>Ingrese el Nombre del Modelo de su Camión</value>
  </data>
  <data name="MakeLabelInfo" xml:space="preserve">
    <value>Ingrese el Nombre del Fabricante Detrás De Su Orgullo Automotriz</value>
  </data>
  <data name="YearLabelInfo" xml:space="preserve">
    <value>Especifique el Año en que Se Desarrolla Su Historia Automotriz</value>
  </data>
  <data name="TruckGroupSuccessAdded" xml:space="preserve">
    <value>Se ha agregado con éxito un nuevo grupo de camiones</value>
  </data>
  <data name="TruckGroupNotAdded" xml:space="preserve">
    <value>Error al agregar un nuevo grupo de camiones</value>
  </data>
  <data name="ChooseGroupType" xml:space="preserve">
    <value>Elija un grupo de camiones</value>
  </data>
  <data name="CreateNewGroupType" xml:space="preserve">
    <value>Crear un nuevo grupo de camiones</value>
  </data>
  <data name="VinLabelInfo" xml:space="preserve">
    <value>Ingrese el VIN – Número de Identificación del Vehículo), un código de 17 caracteres que identifica de manera única la marca, el modelo, el año y los detalles esenciales del camión.</value>
  </data>
  <data name="PlateTruckLabelInfo" xml:space="preserve">
    <value>Camión de placas: Ingrese el número de placa o el identificador de registro asociado con el camión para mantener un registro preciso y eficiente.</value>
  </data>
  <data name="PlateExpLabelInfo" xml:space="preserve">
    <value>Fecha de vencimiento de la placa: Ingrese la fecha de vencimiento de la placa del camión para un monitoreo oportuno y el cumplimiento de los requisitos de registro.</value>
  </data>
  <data name="StateLabelInfo" xml:space="preserve">
    <value>Estado: Especifique el estado o jurisdicción donde está registrado el camión, proporcionando información de ubicación esencial para fines administrativos y regulatorios.</value>
  </data>
  <data name="ColorLabelInfo" xml:space="preserve">
    <value>Color: Ingrese el color primario del camión, proporcionando una referencia visual para la identificación y mejorando la precisión del registro.</value>
  </data>
  <data name="OwnerLabelInfo" xml:space="preserve">
    <value>Владелец: Введите имя или идентификационные данные текущего владельца грузовика, что облегчит получение точной документации о праве собственности и контактной информации для административных целей.</value>
  </data>
  <data name="TruckStatusLabelInfo" xml:space="preserve">
    <value>Estado del camión: Elija la condición operativa actual o el estado del camión entre las opciones disponibles, reflejando su estado en el sistema para un seguimiento y gestión integrales.</value>
  </data>
  <data name="GroupTruck" xml:space="preserve">
    <value>Camión de Grupo</value>
  </data>
  <data name="TypeTruckLabelInfo" xml:space="preserve">
    <value>Tipo de camión: Indique la categoría o configuración particular del camión seleccionando entre las opciones disponibles, especificando su diseño distintivo para una clasificación y organización efectivas.</value>
  </data>
  <data name="VehicleCategoryLabelInfo" xml:space="preserve">
    <value>Categoría del vehículo: Indique la clasificación general del camión seleccionando entre las opciones proporcionadas, definiendo su tipo amplio para una categorización y mantenimiento de registros eficientes.</value>
  </data>
  <data name="CreateNewTruckStatus" xml:space="preserve">
    <value>Crear un nuevo estado de camión</value>
  </data>
  <data name="TruckStatusSuccessAdded" xml:space="preserve">
    <value>Se ha agregado con éxito un nuevo estado de camión</value>
  </data>
  <data name="TruckStatusNotAdded" xml:space="preserve">
    <value>Error al agregar un nuevo estado de camión</value>
  </data>
  <data name="TruckLocation" xml:space="preserve">
    <value>Agregar Ubicación de la Unidad</value>
  </data>
  <data name="ErrorMessageSelect" xml:space="preserve">
    <value>Por favor, haga una selección en el menú desplegable</value>
  </data>
  <data name="AnnualIns" xml:space="preserve">
    <value>Inspección Anual</value>
  </data>
  <data name="TruckLocationType" xml:space="preserve">
    <value>Tipo de Ubicación</value>
  </data>
  <data name="GPSLocationType" xml:space="preserve">
    <value>Ubicación GPS</value>
  </data>
  <data name="LaterLocationType" xml:space="preserve">
    <value>Ubicación Más Tarde</value>
  </data>
  <data name="MannuallyLocationType" xml:space="preserve">
    <value>Ubicación Manualmente</value>
  </data>
</root>