@using Microsoft.AspNetCore.Mvc.Localization
@using WebDispacher.Constants;

@model WebDispacher.ViewModels.Driver.CreateDriverViewModel

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "Create Driver";
}

<body>
    <div class="admin">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <div class="tabContent">
                        <div class="title">
                            <a href="#" onclick="history.back();">@Localizer["BackToDrivers"]</a>
                        </div>
                        <div class="title">
                            <h1 class="text-info-header-1">@Localizer["InfoAboutDriver"]</h1>
                        </div>
                        <form action="" method="post" enctype="multipart/form-data">
                            @Html.ValidationSummary()
                            <label class="big-label" for="">
                                @Localizer["FirstName"]
                                <input class="height-input" type="text" asp-for="FirstName" id="firstName" required>
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["LastName"]
                                <input class="height-input" type="text" asp-for="LastName" id="lastName" required>
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["DriverLicenseNumber"]
                                <input class="height-input" asp-for="DriverLicenseNumber" id="driverNumber"  maxlength="30" type="text" required>
                                <span class="info-gray-message">@Localizer["DriverLicenseNumberInfoLabel"]</span>
                                @Html.ValidationMessageFor(model => model.DriverLicenseNumber, "", new { @class = "text-danger" })
                            </label>
                             <label class="big-label" id="dateOfBirthLabel" for="">
                                @Localizer["DateOfBirth"]
                                <input class="height-input" asp-for="DateOfBirth" id="dateOfBirth" type="text">
                                <p class="dob-not-current-format text-danger"></p>
                                @Html.ValidationMessageFor(model => model.DriverLicenseNumber, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Email"]
                                <input class="height-input" id="email" pattern="@PatternConstants.Email" type="email" asp-for="Email" required>
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Password"]
                                <input class="height-input" type="text" asp-for="DriverControl.Password" required>
                                @Html.ValidationMessageFor(model => model.DriverControl.Password, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["PhoneNumber"]
                                <input class="height-input" type="text" asp-for="PhoneNumber.Number" placeholder="(XXX)-XXX-XXXX" id="phoneD" pattern="@PatternConstants.PhoneNumberWithoutCountryCode" required>
                                <input type="hidden" id="country-code-dialcode" asp-for="PhoneNumber.DialCode">
                                <input type="hidden" id="country-code-iso2" asp-for="PhoneNumber.Iso2">
                                <input type="hidden" id="country-code-name" asp-for="PhoneNumber.Name">
                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["TrailerCapacity"]
                                <input class="height-input" type="text" asp-for="DriverControl.TrailerCapacity" required>
                                @Html.ValidationMessageFor(model => model.DriverControl.TrailerCapacity, "", new { @class = "text-danger" })
                            </label>
                            <div class="full-label">
                                <a class="a-label">@Localizer["DocumentDL"]</a>
                                <div class="d-flex align-items-center wrap">
                                    <div class="file-group big-label mr-2 mb-2">
                                        <div class="row d-flex align-items-center inp-file-width">
                                            <div class="col-8 label-input">
                                                <div onclick="ClearFile(`fi1`, 'fl1');" class="fi" id="fl1"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDocument"]
                                                        <input class="height-input" id="fi1" type="file" onchange="GetFileName(this.value, 'fl1');" name="dLDoc" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <a>@Localizer["InfoMessageUploadFiles"]</a>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <a class="a-label">@Localizer["DocumentMedicalCard"]</a>
                                <div class="d-flex align-items-center wrap">
                                    <div class="file-group big-label mr-2 mb-2">
                                        <div class="row d-flex align-items-center inp-file-width">
                                            <div class="col-8 label-input">
                                                <div onclick="ClearFile(`fi2`, 'fl2');" class="fi" id="fl2"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDocument"]
                                                        <input class="height-input" id="fi2" type="file" onchange="GetFileName(this.value, 'fl2');" name="medicalCardDoc" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <a>@Localizer["InfoMessageUploadFiles"]</a>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <a class="a-label">@Localizer["DocumentSSN"]</a>
                                <div class="d-flex align-items-center wrap">
                                    <div class="file-group big-label mr-2 mb-2">
                                        <div class="row d-flex align-items-center inp-file-width">
                                            <div class="col-8 label-input">
                                                <div onclick="ClearFile(`fi3`, 'fl3');" class="fi" id="fl3"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDocument"]
                                                        <input class="height-input" id="fi3" type="file" onchange="GetFileName(this.value, 'fl3');" name="sSNDoc" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <a>@Localizer["InfoMessageUploadFiles"]</a>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <a class="a-label">@Localizer["DocumentProofOfWork"]</a>
                                <div class="d-flex align-items-center wrap">
                                    <div class="file-group big-label mr-2 mb-2">
                                        <div class="row d-flex align-items-center inp-file-width">
                                            <div class="col-8 label-input">
                                                <div onclick="ClearFile(`fi4`, 'fl4');" class="fi" id="fl4"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDocument"]
                                                        <input class="height-input" id="fi4" type="file" onchange="GetFileName(this.value, 'fl4');" name="proofOfWorkAuthorizationOrGCDoc" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <a>@Localizer["InfoMessageUploadFiles"]</a>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <a class="a-label">@Localizer["DocumentDQL"]</a>
                                <div class="d-flex align-items-center wrap">
                                    <div class="file-group big-label mr-2 mb-2">
                                        <div class="row d-flex align-items-center inp-file-width">
                                            <div class="col-md-8 label-input">
                                                <div onclick="ClearFile(`fi5`, 'fl5');" class="fi" id="fl5"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDocument"]
                                                        <input class="height-input" id="fi5" type="file" onchange="GetFileName(this.value, 'fl5');" name="dQLDoc" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <a>@Localizer["InfoMessageUploadFiles"]</a>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <a class="a-label">@Localizer["DocumentContract"]</a>
                                <div class="d-flex align-items-center wrap">
                                    <div class="file-group big-label mr-2 mb-2">
                                        <div class="row d-flex align-items-center inp-file-width">
                                            <div class="col-md-8 label-input">
                                                <div onclick="ClearFile(`fi6`, 'fl6');" class="fi" id="fl6"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDocument"]
                                                        <input class="height-input" id="fi6" onchange="GetFileName(this.value, 'fl6');" type="file" name="contractDoc" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <a>@Localizer["InfoMessageUploadFiles"]</a>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <a class="a-label">@Localizer["DocumentDrugTest"]</a>
                                <div class="d-flex align-items-center wrap">
                                    <div class="file-group big-label mr-2 mb-2">
                                        <div class="row d-flex align-items-center inp-file-width">
                                            <div class="col-md-8 label-input">
                                                <div onclick="ClearFile(`fi7`, 'fl7');" class="fi" id="fl7"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDocument"]
                                                        <input class="height-input" id="fi7" onchange="GetFileName(this.value, 'fl7');" type="file" name="drugTestResultsDoc" accept="application/pdf, image/jpeg, image/jpg" >
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <a>@Localizer["InfoMessageUploadFiles"]</a>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <input type="hidden" value="" name="dateTimeLocal"/>
                            <input type="submit" value="@Localizer["SaveInfo"]" class="height-input btn1 big-label big-font-size"/>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

<script src="~/js/input-replacer.js"></script>
<script>
    setReplacer(document.querySelector('#firstName'), @ExpressionConstants.OnlyDigits);
    setReplacer(document.querySelector('#lastName'), @ExpressionConstants.OnlyDigits);
    setReplacer(document.querySelector('#driverNumber'), /\-/);

    $.fn.setCursorPosition = function (pos) {
        if ($(this).get(0).setSelectionRange) {
            $(this).get(0).setSelectionRange(pos, pos);
        }
        else if ($(this).get(0).createTextRange) {
            var range = $(this).get(0).createTextRange();
            range.collapse(true);
            range.moveEnd('character', pos);
            range.moveStart('character', pos);
            range.select();
        }
    };

    $(document).ready(function () {
         $("#phoneD").mask("(999)-999-9999", { placeholder: "(XXX)-XXX-XXXX" });

        if (!$("#country-code-iso2").val()) {
            $("#country-code-iso2").val("us")
            $("#country-code-dialcode").val("1")
            $("#country-code-name").val("United States")
        }

        var phone = $("#phoneD");
        phone.intlTelInput({
            initialCountry: $("#country-code-iso2").val() ? $("#country-code-iso2").val() : "us",
            separateDialCode: true,
        });

        phone.on("countrychange", function (e, countryData) {
            $("#country-code-dialcode").val(countryData.dialCode);
            $("#country-code-iso2").val(countryData.iso2);
            $("#country-code-name").val(countryData.name);
        });
    });

     $('input[name="DateOfBirth"]').on('click', function () {
        $(this).setCursorPosition(0);
    });

    $("#dateOfBirth").mask("99/99/9999", { placeholder: "MM/DD/YYYY" });  

    $('#email').on('input invalid', function () {
        this.setCustomValidity('')
        if (this.validity.valueMissing) {
            this.setCustomValidity("@Localizer["EmailValidMessage"]")
        }
        if (this.validity.typeMismatch) {
            this.setCustomValidity("@Localizer["EmailValidMessage"]")
        }
        if (this.validity.patternMismatch) {
            this.setCustomValidity("@Localizer["EmailValidMessage"]")
        }
    })

    $("#fi1").change(function () {
        CheckValid('fl1', 'fi1');
    });

    $("#fi2").change(function () {
        CheckValid('fl2', 'fi2');
    });

    $("#fi3").change(function () {
        CheckValid('fl3', 'fi3');
    });

    $("#fi4").change(function () {
        CheckValid('fl4', 'fi4');
    });

    $("#fi5").change(function () {
        CheckValid('fl5', 'fi5');
    });

    $("#fi6").change(function () {
        CheckValid('fl6', 'fi6');
    });

    $("#fi7").change(function () {
        CheckValid('fl7', 'fi7');
    });

    const dateInput = document.querySelector("[name='dateTimeLocal']");

    $("input[type=submit]").on('click', function (e) {
        CheckValid('fl1', 'fi1');
        CheckValid('fl2', 'fi2');
        CheckValid('fl3', 'fi3');
        CheckValid('fl4', 'fi4');
        CheckValid('fl5', 'fi5');
        CheckValid('fl6', 'fi6');
        CheckValid('fl7', 'fi7');

        CheckValidDoB(e, "dateOfBirth", "dob-not-current-format", "dateOfBirthLabel");

        dateInput.value = GetDateTimeInFormat(new Date());
    })
</script>

<style>
    .intl-tel-input {
        width: 100%;
    }
</style>