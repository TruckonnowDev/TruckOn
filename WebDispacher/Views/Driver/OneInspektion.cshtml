@using System.Drawing;
@using System.IO;
@using System.IO.Compression;
@using System.Drawing.Imaging;
<style>
    .body {
        margin-top: 30px;
        margin-left: 5px;
        margin-right: 5px;
    }

    .filling {
        width: 100%;
    }

    .idStlP {
        color: #421f0e;
        font-size: 20px;
        margin: 20px;
    }

    .inspectionBlock {
        margin: 10px;
    }

    .headPhoto {
        color: rgba(59, 51, 51, 0.87);
        font-size: 23px;
    }

    .blockAllPhoto {
        padding: 5px;
        display: flex;
        flex-wrap: wrap;
        align-items: center;
    }

    .img {
        margin: 5px;
        border-width: 1px;
        padding: 5px;
        border-style: groove;
    }

        .img:hover {
            opacity: 0.7;
        }

    .Photola {
        height: 19%;
        width: 19%;
    }

    .Photove {
        height: 10%;
        width: 10%;
    }


    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        padding-top: 100px; /* Location of the box */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.9); /* Black w/ opacity */
    }

    .modal-content {
        margin: auto;
        display: block;
        width: 80%;
        margin-top: 50px
    }

    #caption {
        margin: auto;
        display: block;
        width: 80%;
        max-width: 700px;
        text-align: center;
        color: #ccc;
        padding: 10px 0;
        height: 150px;
    }

    .modal-content, #caption {
        animation-name: zoom;
        animation-duration: 0.6s;
    }

    @@keyframes zoom {
        from {
            transform: scale(0)
        }

        to {
            transform: scale(1)
        }
    }

    .close {
        position: absolute;
        top: 55px;
        right: 35px;
        color: #f1f1f1;
        font-size: 40px;
        font-weight: bold;
        transition: 0.3s;
    }

        .close:hover,
        .close:focus {
            color: #bbb;
            text-decoration: none;
            cursor: pointer;
        }
</style>



<div class="body">
    <div class="filling">
        <div>
            <p class="idStlP">Driver: @ViewBag.Drivers.FullName</p>
            <p class="idStlP">Inspection truck: @ViewBag.InspectionTruck.Date</p>
            <p class="idStlP">Truck: @ViewBag.Truck</p>
            <p class="idStlP">Trailer: @ViewBag.Trailer</p>
        </div>
        <hr />
        <div class="inspectionBlock">
            <p class="headPhoto">Photo inspection</p>
            <div class="blockAllPhoto">

                @for (int i = 0; i < ViewBag.InspectionTruck.PhotosTruck.Count; i++)
                {
                    try
                    {
                        byte[] imageB = Convert.FromBase64String(@ViewBag.InspectionTruck.PhotosTruck[i].Base64_1);
                        if (imageB != null && imageB.Length != 0)
                        {
                            Byte[] outputBytes = null;
                            Image image = null;
                            using (var inputStream = new MemoryStream(imageB))
                            {
                                image = Image.FromStream(inputStream);
                                Bitmap bitmap = new Bitmap(image, new Size(432, 240));
                                var jpegEncoder = ImageCodecInfo.GetImageDecoders()
                                  .First(c => c.FormatID == ImageFormat.Jpeg.Guid);
                                var encoderParameters = new EncoderParameters(1);
                                encoderParameters.Param[0] = new EncoderParameter(Encoder.Quality, 20L);
                                using (var outputStream = new MemoryStream())
                                {
                                    bitmap.Save(outputStream, jpegEncoder, encoderParameters);
                                    outputBytes = outputStream.ToArray();
                                }
                            }
                            
                            string base64 = Convert.ToBase64String(outputBytes.ToArray());

                            if (image.Height > image.Width)
                            {
                                    <img class="img Photove" src="data:image/gif;base64,@base64" onclick="ClickImg('@ViewBag.InspectionTruck.PhotosTruck[i].Base64')" />
                                }
                                else
                                {
                                    <img class="img Photola" src="data:image/gif;base64,@base64" onclick="ClickImg('@ViewBag.InspectionTruck.PhotosTruck[i].Base64')" />
                                }
                            }
                            else
                            {
                                <p class="img Photola">No photo found;</p>
                            }
                        }
                        catch
                        {

                            <p class="img Photola">No photo found;</p>
                        }

                    }
            </div>
        </div>
    </div>
</div>

<div id="myModal" class="modal">
    <span class="close">&times;</span>
    <img class="modal-content" id="imgMD">
    <div id="caption"></div>
</div>
<script>
    var modal = document.getElementById("myModal");
    var img = document.getElementById("imgMD");
    var captionText = document.getElementById("caption");
    var span = document.getElementsByClassName("close")[0];
    span.onclick = function () {
        modal.style.display = "none";
    }

    function ClickImg(elm) {
        modal.style.display = "block";
        img.src = "data:image/gif;base64,"+elm;
    }
</script>
