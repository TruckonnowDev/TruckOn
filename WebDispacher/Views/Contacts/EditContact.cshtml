@using Microsoft.AspNetCore.Mvc.Localization
@using WebDispacher.Constants;

@model WebDispacher.ViewModels.Contact.ContactViewModel

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "Edit Contact";
}

<body>
    <div class="admin">
        <div class="container">
            <div class="row">
                <div class="col-md-5">
                    <div class="tabContent">
                        <h2>@Localizer["InfoAboutContact"]</h2>
                        <form action="" method="post">
                            <div class="validation" asp-validation-summary="ModelOnly"></div>
                            <label for="">
                                <label class="mb-0" asp-for="Name"></label>
                                <input type="text" name="Name" value="@Model.Name" required>
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </label>
                            <label for="">
                                <label class="mb-0" asp-for="Email"></label>
                                <input type="email" id="email" name="Email" value="@Model.Email" pattern="@PatternConstants.Email" required>
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </label>
                            <label for="">
                                <label class="mb-0" asp-for="Phone"></label>
                                <input type="text" id="phone" name="Phone" placeholder="XXXXXXXXXX" pattern="[0-9]{4,12}" value="@Model.Phone" required>
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </label>
                            <input name="Id" value="@Model.Id" style="display:none" />
                            <input class="btn1" type="submit" value="@Localizer["Save"]" />
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

<style>
    .intl-tel-input {
        width: 100%;
    }
</style>

<script>
    $('#phone').on('input invalid', function () {
        this.setCustomValidity('')
        if (this.validity.valueMissing) {
            this.setCustomValidity("@Localizer["PhoneValidMessage"]")
        }
        if (this.validity.typeMismatch) {
            this.setCustomValidity("@Localizer["PhoneValidMessage"]")
        }
        if (this.validity.patternMismatch) {
            this.setCustomValidity("@Localizer["PhoneValidMessage"]")
        }
    })

    $('#email').on('input invalid', function () {
        this.setCustomValidity('')
        if (this.validity.valueMissing) {
            this.setCustomValidity("@Localizer["EmailValidMessage"]")
        }
        if (this.validity.typeMismatch) {
            this.setCustomValidity("@Localizer["EmailValidMessage"]")
        }
        if (this.validity.patternMismatch) {
            this.setCustomValidity("@Localizer["EmailValidMessage"]")
        }
    })
</script>