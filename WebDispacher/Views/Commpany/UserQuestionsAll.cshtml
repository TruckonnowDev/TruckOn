@using Microsoft.AspNetCore.Mvc.Localization
@using System.Globalization;
@using WebDispacher.Constants;

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "Mail Control | All";
}

<body>
    <div class="admin">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <div class="title">
                        <h1>@Localizer["MailControl"]</h1>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div id="tabs">
                        <div class="tab" onclick="window.location.href='/Company/Questions/New'">@Localizer["New"]</div>
                        <div class="tab" onclick="window.location.href='/Company/Questions/Answered'">@Localizer["Answered"]</div>
                        <div class="tab whiteborder">@Localizer["All"]</div>
                        <div class="tabContent">
                            <table>
                                <thead>
                                    <tr>
                                        <th>@Localizer["DateReceived"]</th>
                                        <th>@Localizer["SenderEmail"]</th>
                                        <th>@Localizer["SenderPhone"]</th>
                                        <th>@Localizer["SenderName"]</th>
                                        <th></th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (var i = 0; i < Model.Count; i++)
                                    {
                                        <tr>
                                            <td style="white-space:nowrap;">@Model[i].DateTimeReceived</td>
                                            <td id="email_@i" style="white-space:nowrap;">@Model[i].SenderEmail</td>
                                            @{
                                                var phoneUser = string.Empty;
                                                if (Model[i]?.PhoneNumber.DialCode != 0 && !string.IsNullOrEmpty(Model[i]?.PhoneNumber.Number))
                                                {
                                                    phoneUser = $"+{Model[i].PhoneNumber.DialCode} {Model[i].PhoneNumber.Number}";
                                                }
                                            }
                                            <td id="phone_@i" style="white-space:nowrap;">@phoneUser</td>
                                            <td id="name_@i">@Model[i].SenderName</td>
                                            <td style="padding-bottom: 20px;padding-top: 20px;">
                                                <button type="button" class="btn1 modalClick" data-bs-toggle="#answerModal" id="modalClick" data-id="@i" data-entry-id="@Model[i].Id" data-bs-target="#answerModal">@Localizer["ViewMessage"]</button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                             <pagination-list actual-pages="functions.GetPages(ViewBag.SelectedPage, ViewBag.CountPages)" selected-page="ViewBag.SelectedPage" />
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="answerModal" tabindex="-1" role="dialog" aria-labelledby="addNewDocFormModalLabel" aria-hidden="true">
            <content class="ng-modal-wrapper">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                    </div>
                </div>
            </content>
        </div>
    </div>
    
</body>
<script>
    $(document).ready(function () {
        ShowAlert();
     });

    document.addEventListener('click', function (event) {
        if (event.target.classList.contains('modalClick')) {
            const entryId = event.target.getAttribute('data-id');
            const dataEntryId = event.target.getAttribute('data-entry-id');
            $('#localDateId').val(GetDateTimeInFormat(new Date()));
            $.ajax({
                url: '/Company/Question',
                type: 'GET',
                data: { id: dataEntryId },
                success: function (data) {
                    $("#answerModal .modal-content").html(data);
                    $("#answerModal").modal('show');
                },
                error: function () {
                }
            });
        }
    });

</script>

<style>

    .tabContent form {
        margin-bottom: 10px;
        margin-top: 10px;
    }

    p {
        font-size: 12px;
    }

    .btn1 {
        padding: 12px 20px;
        font-size: 14px;
        font-weight: 600;
        width: 150px !important;
    }
</style>

<style>
    .modal-dialog {
        position: absolute;
        left: 0;
        right: 0;
        margin-left: auto;
        margin-right: auto;
        top: 100px;
        width: 520px !important;
        text-align: left;
        background-color: #fff;
        -moz-box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.15), 0px 0px 1px 1px rgba(0, 0, 0, 0.05);
        -webkit-box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.15), 0px 0px 1px 1px rgba(0, 0, 0, 0.05);
        box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.15), 0px 0px 1px 1px rgba(0, 0, 0, 0.05);
        transition: height 0.25s linear;
        -moz-border-radius: 10px;
        -webkit-border-radius: 10px;
        border-radius: 30px;
    }

    .modal-content {
        border: 0px;
        border-radius: 30px;
    }

    .ng-modal-wrapper {
        display: inline-block;
        vertical-align: middle;
        padding: 50px 0;
        width: 100%;
        position: relative;
    }

    .modal-dialog label {
        position: relative;
        display: inline-block;
        vertical-align: middle;
        cursor: pointer;
        padding: 3px 10px 4px 0px;
        -moz-border-radius: 3px;
        -webkit-border-radius: 3px;
        margin-top: 2px;
        background: none;
        font-size: 16px;
        line-height: 19px;
        letter-spacing: -.016em;
        -moz-transition-property: all;
        -o-transition-property: all;
        -webkit-transition-property: all;
        transition-property: all;
        -moz-transition-duration: 300ms;
        -o-transition-duration: 300ms;
        -webkit-transition-duration: 300ms;
        transition-duration: 300ms;
        border-radius: 30px;
    }

    .modal-buttons .right-buttons {
        float: right;
    }

    .modal-inp-text {
        width: 100%;
        height: 77px;
        background: #fff;
        border: 1px solid #c4c9d5;
        border-radius: 10px;
        padding: 25px 15px;
        font-family: Montserrat;
        font-style: normal;
        font-weight: 400;
        font-size: 16px;
        line-height: 1.2;
        color: #686f7c;
        margin-top: 6px
    }

    .modal-title h1 {
        font-size: 26px;
    }

    .modal-header {
        justify-content: center;
        padding: 1rem;
    }

    .modal-footer {
        justify-content: center;
        padding: 1rem;
    }
</style>