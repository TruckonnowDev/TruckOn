@using Microsoft.AspNetCore.Mvc.Localization;

@model List<WebDispacher.ViewModels.Resources.ResourceViewModel>

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "Resources";
}

<div id="all-items">
    <div class="features-block">
        <div class="container">
            <div class="row" style="justify-content: center">
                <div class="col-md-12">
                    <h1 style="font-size: 36px;text-align:center">@Localizer["HeaderResource"]</h1>
                </div>
                <div class="col-md-10 mt-5">
                    <div class="features" style="display: flex;flex-flow: row wrap;justify-content: center;" id="sortable-list">
                        @foreach (var item in Model)
                        {
                            <div data-id="@item.PositionIndex" class="features-item m-2 mt-4" id="@item.Id" draggable="true">
                                <a href="Admin/@item.Id/">
                                    <img src="@item.UrlPicture" alt="">
                                    <h3>@item.Name</h3>
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/libs/Sortable/Sortable.js"></script>
<script>
    let originalOrder = Array.from(document.querySelectorAll('.features-item')).map(item => item.id);

    new Sortable(document.getElementById('sortable-list'), {
        ghostClass: 'sortable-ghost',
        animation: 400,
        onEnd: function (evt) {
            let newOrder = Array.from(document.querySelectorAll('.features-item')).map(item => item.id);

            let changes = findOrderChanges(originalOrder, newOrder);

            sendPositionUpdate(changes);

            originalOrder = newOrder;
        }
    });

    function findOrderChanges(originalOrder, newOrder) {
        let changes = [];
        for (let i = 0; i < originalOrder.length; i++) {
            if (originalOrder[i] !== newOrder[i]) {
                changes.push({ Id: parseInt(newOrder[i]), PositionIndex: i });
            }
        }
        return changes;
    }

    function sendPositionUpdate(changes) {
        $.ajax({
            url: '/Resources/UpdatePositionIndexes',
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(changes),
            success: function (response) {
                console.log('Positions updated successfully');
            },
            error: function (error) {
                console.error('Error updating positions:', error);
            }
        });
    }
</script>

<style>
    .sortable-ghost {
        opacity: 0.5;
        transition: opacity 0.2s;
    }

    .features-block {
        padding-top: 30px;
    }

    .features-item {
        text-align: center;
    }

    .features .features-item {
        margin: 0.5rem;
        margin-top: 1.5rem;
    }

    .features-item img {
        width: 76px;
        height: 76px;
        margin-left: auto;
        margin-right: auto;
        transition: all 0.3s ease
    }

    .features-item img:hover {
        transform: scale(1.3);
        transform-origin: top top;
    }

    .features-item h3 {
        margin-top: 1rem;
        font-size: 16px;
    }
</style>