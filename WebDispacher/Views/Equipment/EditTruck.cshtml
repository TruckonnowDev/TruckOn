@using Microsoft.AspNetCore.Mvc.Localization
@using WebDispacher.Constants;

@model WebDispacher.ViewModels.Truck.TruckViewModel

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "Edit Truck";
    var regDocName = string.Empty;
    var leaseAgrDocName = string.Empty;
    var annualInsDocName = string.Empty;
    var bobTailPhysicalDamageDocName = string.Empty;
    var nYHUTDocName = string.Empty;

    @if(ViewBag.TruckDocs.TryGetValue(DocAndFileConstants.TruckRegistration,out regDocName));
    @if(ViewBag.TruckDocs.TryGetValue(DocAndFileConstants.TruckAgreement,out leaseAgrDocName));
    @if(ViewBag.TruckDocs.TryGetValue(DocAndFileConstants.TruckInspection,out annualInsDocName));
    @if(ViewBag.TruckDocs.TryGetValue(DocAndFileConstants.BobTailPhysicalDamage,out bobTailPhysicalDamageDocName));
    @if(ViewBag.TruckDocs.TryGetValue(DocAndFileConstants.NyHit,out nYHUTDocName));
   
}

<body>
    <div class="admin truc">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <div class="tabContent">
                        <div class="title">
                            <a href="#" onclick="history.back();">@Localizer["BackToEquipment"]</a>
                        </div>
                        <div class="title">
                            <h1 class="text-info-header-1">@Localizer["EditTruck"]</h1>
                        </div>
                        <form onsubmit="formatBeforeSubmit();" action="" method="post" enctype="multipart/form-data">
                            @Html.ValidationSummary()
                            <input type="text" name="Id" required value="@Model.Id" style="display:none;" />
                            <label class="big-label" for="">
                                @Localizer["NameTruck"]
                                <input class="height-input" id="name" type="text" asp-for="NameTruck" value="@Model.NameTruck" maxlength="25">
                                @Html.ValidationMessageFor(model => model.NameTruck, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Year"]
                                @{
                                    string yearString = Convert.ToInt32(Model.Year) != 0
                                    ? Model.Year
                                    : string.Empty;
                                }
                                <input class="height-input" type="text" asp-for="Year" value="@yearString" maxlength="4" />
                                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Make"]
                                <input class="height-input" id="make" type="text" asp-for="Make" value="@Model.Make" maxlength="15"/>
                                @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Model"]
                                <input class="height-input" id="model" type="text" asp-for="Model" value="@Model.Model" maxlength="20" />
                                @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["TypeTruck"] <br />
                                <select class="height-input input-select" asp-for="Type" id="typeId" onchange="SelectTruck(this.options[this.selectedIndex].value)" value="@Model.Type">
                                    <option value="2DrPickupwithSingleWheel">2Dr Pickup with Single Wheel</option>
                                    <option value="2DrPickupwithDuallyWheels">2Dr Pickup with Dually Wheels</option>
                                    <option value="4DrCrewCabPickupwithSingleWheel">4Dr Crew Cab Pickup with Single Wheel</option>
                                    <option value="4DrCrewCabPickupwithDuallyWheels">4Dr Crew Cab Pickup with Dually Wheels</option>
                                    <option value="2DrPickupPickupwithSingleWheel">2Dr Pickup ( flat bed ) Pickup with Single Wheel</option>
                                    <option value="2DrPickupPickupwithDuallyWheels">2Dr Pickup ( flat bed ) Pickup with  Dually Wheels</option>
                                    <option value="4DrCrewCabPickupwithSingleWheelFlatBed">4Dr Crew Cab ( flat bed ) Pickup with Single Wheel</option>
                                    <option value="4DrCrewCabPickupwithDuallyWheelsFlatBed">4Dr Crew Cab ( flat bed ) Pickup with  Dually Wheels</option>
                                    @*<option value="PickupFourWheel">Four-wheel pickup dually</option>
                                        <option value="FourDoorTruckChassisOpenFrame">Four-door truck with double chassis and open frame</option>
                                        <option value="BoxTruckSingleWheel">Box Truck Single Wheel</option>
                                        <option value="BoxTruckWheelDually">Box Truck Wheel Dually</option>
                                        <option value="CargiVanChasissDuallyOrSingleWheel">Cargi Van Chasiss Dually Or Single Wheel</option>
                                        <option value="CargoVanMustHaveWithDually">Cargo Van Must Have With Dually</option>
                                        <option value="PickUpDuallyChassisOpenFrameInTheBackMustHave2">Pick Up Dually Chassis Open Frame In The Back Must Have 2</option>
                                        <option value="PickUpDuallyChassisMustHave2Door">Pick Up Dually Chassis Must Have 2 Door</option>
                                        <option value="PickUpDuallyChassisMustHave4Door">Pick Up Dually Chassis Must Have 4 Door</option>
                                        <option value="PickUpDuallyFlatbed4Door">Pick Up Dually Flatbed 4 Door</option>
                                        <option value="PickUpDuallyFlatbedMustHave2Door">Pick Up Dually Flatbed Must Have 2 Door</option>*@
                                </select>
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Vin"]#
                                <input class="height-input" type="text" asp-for="Vin" value="@Model.Vin" maxlength="17" />
                                @Html.ValidationMessageFor(model => model.Vin, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["PlateTruck"]
                                <input class="height-input" type="text" asp-for="PlateTruck" value="@Model.PlateTruck"  maxlength="10"/>
                                @Html.ValidationMessageFor(model => model.PlateTruck, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["PlateExp"]
                                @{
                                    string plateExpiresString = Model.Exp.HasValue
                                    ? Model.Exp.Value.ToString("MM/yy")
                                    : string.Empty;
                                }
                                <input class="height-input" type="text" asp-for="Exp" id="plateExp" value="@plateExpiresString" />
                                @Html.ValidationMessageFor(model => model.Exp, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["State"]
                                <select class="height-input input-select" id="stateP" asp-for="State" value="@Model.State">
                                    <option value="AL">Alabama</option>
                                    <option value="AK">Alaska</option>
                                    <option value="AZ">Arizona</option>
                                    <option value="AR">Arkansas</option>
                                    <option value="CA">California</option>
                                    <option value="CO">Colorado</option>
                                    <option value="CT">Connecticut</option>
                                    <option value="DE">Delaware</option>
                                    <option value="DC">District Of Columbia</option>
                                    <option value="FL">Florida</option>
                                    <option value="GA">Georgia</option>
                                    <option value="HI">Hawaii</option>
                                    <option value="ID">Idaho</option>
                                    <option value="IL">Illinois</option>
                                    <option value="IN">Indiana</option>
                                    <option value="IA">Iowa</option>
                                    <option value="KS">Kansas</option>
                                    <option value="KY">Kentucky</option>
                                    <option value="LA">Louisiana</option>
                                    <option value="ME">Maine</option>
                                    <option value="MD">Maryland</option>
                                    <option value="MA">Massachusetts</option>
                                    <option value="MI">Michigan</option>
                                    <option value="MN">Minnesota</option>
                                    <option value="MS">Mississippi</option>
                                    <option value="MO">Missouri</option>
                                    <option value="MT">Montana</option>
                                    <option value="NE">Nebraska</option>
                                    <option value="NV">Nevada</option>
                                    <option value="NH">New Hampshire</option>
                                    <option value="NJ">New Jersey</option>
                                    <option value="NM">New Mexico</option>
                                    <option value="NY">New York</option>
                                    <option value="NC">North Carolina</option>
                                    <option value="ND">North Dakota</option>
                                    <option value="OH">Ohio</option>
                                    <option value="OK">Oklahoma</option>
                                    <option value="OR">Oregon</option>
                                    <option value="PA">Pennsylvania</option>
                                    <option value="RI">Rhode Island</option>
                                    <option value="SC">South Carolina</option>
                                    <option value="SD">South Dakota</option>
                                    <option value="TN">Tennessee</option>
                                    <option value="TX">Texas</option>
                                    <option value="UT">Utah</option>
                                    <option value="VT">Vermont</option>
                                    <option value="VA">Virginia</option>
                                    <option value="WA">Washington</option>
                                    <option value="WV">West Virginia</option>
                                    <option value="WI">Wisconsin</option>
                                    <option value="WY">Wyoming</option>
                                </select>
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Color"]
                                <input class="height-input" id="color" type="text" asp-for="ColorTruck" value="@Model.ColorTruck" maxlength="15">
                                @Html.ValidationMessageFor(model => model.ColorTruck, "", new { @class = "text-danger" })
                            </label>
                            <label class="big-label" for="">
                                @Localizer["Owner"]
                                <input class="height-input" id="owner" type="text" asp-for="Owner" value="@Model.Owner" maxlength="25" />
                                @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
                            </label>
                            <div class="big-label">
                                <div class="full-label">
                                    <p class="a-label">@Localizer["TruckRegistration"]</p>
                                    <a class="pt-1 pb-1">@Localizer["InfoMessageUploadFiles"]</a>
                                    <div>
                                        <div class="file-group big-label">
                                            <div class="row">
                                                <div class="col-8 label-input d-flex align-items-center">
                                                    <div onclick="ClearFile(`fi1`, 'fl1');" class="fi" id="fl1">
                                                        @regDocName
                                                    </div>
                                                </div>
                                                <div class="col-4 select-doc">
                                                    <div class="select-button-1 d-flex justify-content-end">
                                                        <label>
                                                            @Localizer["SelectDoc"]
                                                            <input class="height-input" id="fi1" onchange="GetFileName(this.value, 'fl1');" type="file" name="truckRegistrationDoc" accept="application/pdf, image/jpeg, image/jpg">
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <p class="file-limit-exceeded text-danger"></p>
                                    </div>
                                </div>
                            </div>
                            <div class="full-label">
                                <p class="a-label">@Localizer["TruckLeaseAgreement"]</p>
                                <a class="pt-1 pb-1">@Localizer["InfoMessageUploadFiles"]</a>
                                <div>
                                    <div class="file-group big-label">
                                        <div class="row">
                                            <div class="col-8 label-input d-flex align-items-center">
                                                <div onclick="ClearFile(`fi2`, 'fl2');" class="fi" id="fl2">
                                                    @leaseAgrDocName
                                                </div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDoc"]
                                                        <input class="height-input" id="fi2" onchange="GetFileName(this.value, 'fl2');" type="file" name="truckLeaseAgreementDoc" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <p class="a-label">@Localizer["TruckAnnualIns"]</p>
                                <a class="pt-1 pb-1">@Localizer["InfoMessageUploadFiles"]</a>
                                <div>
                                    <div class="file-group big-label">
                                        <div class="row">
                                            <div class="col-8 label-input d-flex align-items-center">
                                                <div onclick="ClearFile(`fi3`, 'fl3');" class="fi" id="fl3">
                                                    @annualInsDocName
                                                </div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDoc"]
                                                        <input class="height-input" id="fi3" onchange="GetFileName(this.value, 'fl3');" type="file" name="truckAnnualInspection" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <p class="a-label">@Localizer["BobTailPhysicalDamage"]</p>
                                <a class="pt-1 pb-1">@Localizer["InfoMessageUploadFiles"]</a>
                                <div>
                                    <div class="file-group big-label">
                                        <div class="row">
                                            <div class="col-8 label-input d-flex align-items-center">
                                                <div onclick="ClearFile(`fi4`, 'fl4');" class="fi" id="fl4"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDoc"]
                                                        <input class="height-input" id="fi4" onchange="GetFileName(this.value, 'fl4');" type="file" name="bobTailPhysicalDamage" accept="application/pdf, image/jpeg, image/jpg">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <div class="full-label">
                                <p class="a-label">@Localizer["NyHut"] (@Localizer["OptionalForNyRolling"])</p>
                                <a class="pt-1 pb-1">@Localizer["InfoMessageUploadFiles"]</a>
                                <div>
                                    <div class="file-group big-label">
                                        <div class="row">
                                            <div class="col-8 label-input d-flex align-items-center">
                                                <div onclick="ClearFile(`fi5`, 'fl5');" class="fi" id="fl5"></div>
                                            </div>
                                            <div class="col-4 select-doc">
                                                <div class="select-button-1 d-flex justify-content-end">
                                                    <label>
                                                        @Localizer["SelectDoc"]
                                                        <input class="height-input" id="fi5" onchange="GetFileName(this.value, 'fl5');" type="file" accept="application/pdf, image/jpeg, image/jpg" name="nYHUTDoc">
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <p class="file-limit-exceeded text-danger"></p>
                                </div>
                            </div>
                            <input type="hidden" value="" name="localDate" />
                            <button class="btn1 big-label height-input big-font-size">@Localizer["SaveInfo"]</button>
                        </form>
                    </div>
                </div>
                <div class="col-md-6">
                    <div id="4DrCrewCabPickupwithDuallyWheels" class="row" style="display:none;">
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door1.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door2.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door3.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door4.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door5.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door6.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door7.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door8.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door9.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door10.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door11.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door12.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door13.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door14.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door15.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door16.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door17.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door18.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door19.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door20.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door21.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door22.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TruckPattern/PickUpDually4TiresInTheBackMustHave4Door/PickUpDually4TiresInTheBackMustHave4Door23.png&type=png" alt="">
                        </div>
                    </div>
                    @await Html.PartialAsync("~/Views/Equipment/VehicleImages.cshtml", new ViewDataDictionary(ViewData) { {"CountPhoto", "32"}, { "VehicleName", "2DrPickupwithSingleWheel" } })
                    @await Html.PartialAsync("~/Views/Equipment/VehicleImages.cshtml", new ViewDataDictionary(ViewData) { {"CountPhoto", "35"}, { "VehicleName", "2DrPickupwithDuallyWheels" } })
                    @await Html.PartialAsync("~/Views/Equipment/VehicleImages.cshtml", new ViewDataDictionary(ViewData) { {"CountPhoto", "35"}, { "VehicleName", "4DrCrewCabPickupwithSingleWheel" } })
                    @await Html.PartialAsync("~/Views/Equipment/VehicleImages.cshtml", new ViewDataDictionary(ViewData) { {"CountPhoto", "12"}, { "VehicleName", "2DrPickupPickupwithSingleWheel" } })
                    @await Html.PartialAsync("~/Views/Equipment/VehicleImages.cshtml", new ViewDataDictionary(ViewData) { {"CountPhoto", "30"}, { "VehicleName", "2DrPickupPickupwithDuallyWheels" } })
                    @await Html.PartialAsync("~/Views/Equipment/VehicleImages.cshtml", new ViewDataDictionary(ViewData) { {"CountPhoto", "30"}, { "VehicleName", "4DrCrewCabPickupwithSingleWheelFlatBed" } })
                    @await Html.PartialAsync("~/Views/Equipment/VehicleImages.cshtml", new ViewDataDictionary(ViewData) { {"CountPhoto", "30"}, { "VehicleName", "4DrCrewCabPickupwithDuallyWheelsFlatBed" } })
                </div>
            </div>
        </div>
    </div>
</body>

<script>
    function formatBeforeSubmit() {
        const input = document.getElementById('plateExp');
        const parts = input.value.split('/');
        if (parts.length === 2) {
            input.value = '01.' + parts[0] + '.20' + parts[1];
        }
    }
</script>
<script src="~/js/input-replacer.js"></script>
<script>

    setReplacer(document.querySelector('#name'), @ExpressionConstants.OnlyDigits);
    setReplacer(document.querySelector('#make'), @ExpressionConstants.OnlyDigits);
    setReplacer(document.querySelector('#model'), @ExpressionConstants.OnlyDigits);
    setReplacer(document.querySelector('#color'), @ExpressionConstants.OnlyDigits);
    setReplacer(document.querySelector('#owner'), @ExpressionConstants.OnlyDigits);
    const dateInput = document.querySelector("[name='localDate']");

    $("#fi1").change(function () {
        CheckValid('fl1', 'fi1');
    });

    $("#fi2").change(function () {
        CheckValid('fl2', 'fi2');
    });

    $("#fi3").change(function () {
        CheckValid('fl3', 'fi3');
    });
    
    $("#fi4").change(function () {
        CheckValid('fl4', 'fi4');
    });
    
    $("#fi5").change(function () {
        CheckValid('fl5', 'fi5');
    });

    $(".big-font-size").on('click', function () {
        CheckValid('fl1', 'fi1');
        CheckValid('fl2', 'fi2');
        CheckValid('fl3', 'fi3');
        CheckValid('fl4', 'fi4');
        CheckValid('fl5', 'fi5');

        dateInput.value = GetDateTimeInFormat(new Date());
    });

    $(function () {
        $("#plateExp").mask("99/99", { placeholder: "MM/YY" });
    });

    var curentSelectPattern;

    $(document).ready(function () {
        $('#typeId').val('@Model.Type').change();
        $('#stateP').val('@Model.State').change();


            GetFileName('@regDocName', 'fl1');

            GetFileName('@annualInsDocName', 'fl2');

            GetFileName('@annualInsDocName', 'fl3');

            GetFileName('@bobTailPhysicalDamageDocName', 'fl4');

            GetFileName('@nYHUTDocName', 'fl5');

    });


    function SelectTruck(value) {
        if (curentSelectPattern || value == "") {
            curentSelectPattern.style.display = "none";
            curentSelectPattern.style.justifyContent = "unset";
            curentSelectPattern.style.alignItems = "unset";
        }
        let selectTypeDiv = document.getElementById(value);
        if (selectTypeDiv) {
            selectTypeDiv.style.display = "flex";
            selectTypeDiv.style.justifyContent = "center";
            selectTypeDiv.style.alignItems = "center";
            curentSelectPattern = selectTypeDiv;
        }
    }
</script>
