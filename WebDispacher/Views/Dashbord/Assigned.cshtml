<div class="body">
    <nav >
        <input class="btnSt" type="button" value="Nev load" onclick="window.location.href='@Url.Action("NewLoad", "Dashbord")';"/>
        <input class="btnSt activeBtn" value="Assigned" type="button" onclick="window.location.href='@Url.Action("Assigned", "Dashbord")';"/>
        <input class="btnSt" type="button" value="Picked up" onclick="window.location.href='@Url.Action("Pickedup", "Dashbord")';"/>
        <input class="btnSt" type="button" value="Delivered" onclick="window.location.href='@Url.Action("Delivered", "Dashbord")';"/>
        <input class="btnSt" type="button" value="Billed" onclick="window.location.href='@Url.Action("Billed", "Dashbord")';"/>
        <input class="btnSt" type="button" value="Paid" onclick="window.location.href='@Url.Action("Paid", "Dashbord")';"/>
        <input class="btnSt" type="button" value="Archived" onclick="window.location.href='@Url.Action("Archived", "Dashbord")';"/>
        <input class="btnSt" type="button" value="Deleted" onclick="window.location.href='@Url.Action("Deleted", "Dashbord")';"/>
    </nav>
    <div class="filling">
        @for (int i = 0; i < ViewBag.Orders.Count; i++)
        {
        <div class="orders">
            <input class="btnId" type="button" value="Load Id: @ViewBag.Orders[i].idOrder" onClick='location.href="/Dashbord/Order/FullInfoOrder?id=@ViewBag.Orders[i].Id&stasus=Assigned"'>
            <span class="stPData">@ViewBag.Orders[i].TotalPaymentToCarrier</span>
            @if (ViewBag.Orders[i].VehiclwInformations != null)
            {
                @for (int j = 0; j < ViewBag.Orders[i].VehiclwInformations.Count; j++)
                {
                    <p class="stPData"> @ViewBag.Orders[i].VehiclwInformations[j].Year @ViewBag.Orders[i].VehiclwInformations[j].Make @ViewBag.Orders[i].VehiclwInformations[j].Model, Type: @ViewBag.Orders[i].VehiclwInformations[j].Type</p>
                }
            }
                <div class="bodyBlock">
                    <div class="blockData">
                        <h5 class="headPH4">ORIGIN</h5>
                        <p class="stPData">
                            @ViewBag.Orders[i].AddresP, @ViewBag.Orders[i].CityP,
                            <br /> @ViewBag.Orders[i].StateP, @ViewBag.Orders[i].ZipP
                        </p>
                        <p class="stPData">@ViewBag.Orders[i].PickupExactly</p>
                        <p class="stPData">Phone: @ViewBag.Orders[i].PhoneP</p>
                    </div>
                    <div class="blockData">
                        <h5 class="headPH4">DESTINATION</h5>
                        <p class="stPData">
                            @ViewBag.Orders[i].AddresD, @ViewBag.Orders[i].CityD,
                            <br /> @ViewBag.Orders[i].StateD, @ViewBag.Orders[i].ZipD
                        </p>
                        <p class="stPData">@ViewBag.Orders[i].DeliveryEstimated</p>
                        <p class="stPData">Phone: @ViewBag.Orders[i].PhoneD</p>
                    </div>
                    <div class="blockData" style="margin-left:auto;">
                        <a class="btnId" style="width:60px" href="/Dashbord/Order/Edit?id=@ViewBag.Orders[i].Id&stasus=Assigned">Edit</a>
                        <select onchange="SelectAssining(this.options[this.selectedIndex].value)" class="btnId" style="width:100px">
                            <option value="">Reassang</option>
                            <option value="@ViewBag.Orders[i].Id,Unassign">Unassign</option>
                            @for (int j = 0; j < ViewBag.Drivers.Count; j++)
                            {
                                <option value="@ViewBag.Orders[i].Id,@ViewBag.Drivers[j].Id">@ViewBag.Drivers[j].FullName</option>
                            }
                        </select>
                        <a class="btnId" style="width:60px" href="DeletedOrder?id=@ViewBag.Orders[i].Id&status=Assigned">Deleted</a>
                        <div style="display:flex">
                            <p class="stPData">Assigned to @ViewBag.Orders[i].Driverr.FullName</p>
                            <p class="stPData">Phone: @ViewBag.Orders[i].Driverr.PhoneNumber</p>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<script>
    function SelectAssining(idOrderAndIdDriver) {
        var statusResponse;
        if (idOrderAndIdDriver.split(',')[1] == "Unassign") {
            let url = "@ViewBag.BaseUrl/Dashbord/Unassign";
            let xmlHttp = new XMLHttpRequest();
            let idOrder = idOrderAndIdDriver.split(',')[0];
            var body = 'idOrder=' + encodeURIComponent(idOrder);
            xmlHttp.open("POST", url, false);
            xmlHttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xmlHttp.send(body);
            statusResponse = xmlHttp.responseText;
        }
        else if (idOrderAndIdDriver != "") {
            let idOrder = idOrderAndIdDriver.split(',')[0];
            let idDriver = idOrderAndIdDriver.split(',')[1];
            let url = "@ViewBag.BaseUrl/Dashbord/Assign";
            let xmlHttp = new XMLHttpRequest();
            var body = 'idOrder=' + encodeURIComponent(idOrder) +
                '&idDriver=' + encodeURIComponent(idDriver);
            xmlHttp.open("POST", url, false);
            xmlHttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xmlHttp.send(body);
            statusResponse = xmlHttp.responseText;
        }
        
        if (statusResponse == "True") {
            window.location.reload();
        }
    }
</script>
<style>
    * {
        margin: 0px;
    }

    .bodyBlock {
        display: flex;
    }

    .blockData {
        margin-right: 30px;
        width: 30%;
    }

    .headPH4 {
        margin: 7px;
        font-size: 22px;
        color: #ad7d52;
    }

    .btnCreateoOrder {
        color: white;
        background-color: #ffbd6b;
        display: inline-block;
        padding: 10px;
        font-size: 14px;
        font-weight: 400;
        text-align: center;
        border: 2px solid;
        border-radius: 7px;
        margin-bottom: 10px;
    }

        .btnCreateoOrder:hover {
            background-color: #ffd7a6;
        }

    .btnId {
        color: #ffbd6b;
        background: none;
        border-color: #ffbd6b;
        display: inline-block;
        padding: 10px;
        font-size: 16px;
        font-weight: 400;
        text-align: center;
        border: 2px solid;
        border-radius: 4px;
    }

        .btnId:hover {
            background-color: #ffbd6b;
            color: white;
        }

    .stPData {
        margin: 5px;
        color: #421f0e;
        font-size: 20px;
    }

    .orders {
        width: 90%;
        border-bottom: double;
        border-width: 2px;
        border-color: #f7d7bf;
        padding: 45px;
    }

    .body {
        margin-top: 30px;
        margin-left: 5px;
        margin-right: 5px;
    }

    .btnSt {
        margin: 0px;
        border: none;
        width: 120px;
        height: 40px;
        background-color: white;
        font-size: 20px;
        color: #ffbd6b;
        border-radius: 5px;
    }

        .btnSt:hover {
            background-color: #f7f0e2;
        }

    .filling {
        width: 100%;
        height: 100px;
        border-top: double;
        border-width: 2px;
        border-color: #f7d7bf;
    }

    .activeBtn {
        border-radius: 3px;
        border-top: double;
        border-right: double;
        border-left: double;
    }
</style>