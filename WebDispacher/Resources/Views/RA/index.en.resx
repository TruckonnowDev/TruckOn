<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BodyFifthBlock" xml:space="preserve">
    <value>Any person with a personalized Login information for the App gains a full access to a whole platform that can be accessed anywhere in the world</value>
  </data>
  <data name="BodySecondBlock" xml:space="preserve">
    <value>Take a full control of your Car Transportation needs with our App today. Our highly advanced App will help your business and make sure your driver will not skip any steps assigned by your Company's Admin.</value>
  </data>
  <data name="BodySixthBlock" xml:space="preserve">
    <value>Truckonnow is easy to use, most compatible, and reliable driver's App in Auto Transportation Industry</value>
  </data>
  <data name="BodyTenthBlock" xml:space="preserve">
    <value>To contact us, you can call the number</value>
  </data>
  <data name="ContactUs" xml:space="preserve">
    <value>Contact Us</value>
  </data>
  <data name="DescriptionPackage" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipiscing elit</value>
  </data>
  <data name="DescriptionPackageItem" xml:space="preserve">
    <value>Ut enim ad minim veniam, quis</value>
  </data>
  <data name="DispatcherFirstBlock" xml:space="preserve">
    <value>Dispatcher</value>
  </data>
  <data name="DriverFirstBlock" xml:space="preserve">
    <value>Driver</value>
  </data>
  <data name="FirstBodyThirdBlock" xml:space="preserve">
    <value>You can choose what inspection level the driver needs to perform at the pick-up &amp; delivery. Ability to set the amount of detailed pictures that need to be taken upon inspection.  All pictures have an outlined body parts of the vehicle and interior to assist the driver with taking a better pictures. App automatically adjusts picture's quality to "highly visible" in order to help a driver to select imperfections and post them to the app in a timely manner.</value>
  </data>
  <data name="Marketplace" xml:space="preserve">
    <value>Marketplace</value>
  </data>
  <data name="FirstHeaderThirdBlock" xml:space="preserve">
    <value>Transported Vehicle Inspection</value>
  </data>
  <data name="FirstPartHeaderNinthBlock" xml:space="preserve">
    <value>Try the New Way to Transport</value>
  </data>
  <data name="FirstPlusSixthBlock" xml:space="preserve">
    <value>Send electronic invoices within seconds</value>
  </data>
  <data name="FooterFirstPartEighthBlock" xml:space="preserve">
    <value>To start, please register by filling out the</value>
  </data>
  <data name="FooterSecondBlock" xml:space="preserve">
    <value>App available on Market and IOS</value>
  </data>
  <data name="FooterSecordPartEighthBlock" xml:space="preserve">
    <value>FROM</value>
  </data>
  <data name="FourthPlusSixthBlock" xml:space="preserve">
    <value>Digitized vehicle inspections and unlimited photos</value>
  </data>
  <data name="GetStarted" xml:space="preserve">
    <value>Get Started</value>
  </data>
  <data name="GreatWorkExperienceBody" xml:space="preserve">
    <value>More than 10 years of car hauling experience is invested in this easy to use App and Portal. You will have a full control of your business with simple to use tools &amp; great features. Our amazing product will help you to run your business smoothly and in a highly efficient way.</value>
  </data>
  <data name="GreatWorkExperienceHeader" xml:space="preserve">
    <value>Great Work Experience</value>
  </data>
  <data name="HeaderEighthBlock" xml:space="preserve">
    <value>Prices and Packages</value>
  </data>
  <data name="HeaderFifthBlock" xml:space="preserve">
    <value>Full Access</value>
  </data>
  <data name="HeaderFirstBlock" xml:space="preserve">
    <value>No Bussiness is Too Small for this App</value>
  </data>
  <data name="HeaderFourthBlock" xml:space="preserve">
    <value>Car Hauling Made Simple. Try it for Free.</value>
  </data>
  <data name="HeaderSecondBlock" xml:space="preserve">
    <value>Take Full Control</value>
  </data>
  <data name="HeaderSeventhBlock" xml:space="preserve">
    <value>Included Features</value>
  </data>
  <data name="HeaderSixthBlock" xml:space="preserve">
    <value>Drivers Love Truckonnow</value>
  </data>
  <data name="LargeFleetFirstBlock" xml:space="preserve">
    <value>Large Fleet</value>
  </data>
  <data name="MediumFleetFirstBlock" xml:space="preserve">
    <value>Medium Fleet</value>
  </data>
  <data name="ModalDescription" xml:space="preserve">
    <value>Please fill out this form and we will get in touch with you ASAP Or call us with any questions at</value>
  </data>
  <data name="ModalFooterDescription" xml:space="preserve">
    <value>Car Hauling Made Simple.
                                        Try it for Free.</value>
  </data>
  <data name="ModalFooterFirstItem" xml:space="preserve">
    <value>No credit card required</value>
  </data>
  <data name="ModalFooterSecondItem" xml:space="preserve">
    <value>Cancel anytime</value>
  </data>
  <data name="ModalFormEmail" xml:space="preserve">
    <value>Your Email</value>
  </data>
  <data name="ModalFormMessage" xml:space="preserve">
    <value>Your Message</value>
  </data>
  <data name="ModalFormName" xml:space="preserve">
    <value>Your Name</value>
  </data>
  <data name="ModalFormSubmit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="ModalHeader" xml:space="preserve">
    <value>Get in Touch</value>
  </data>
  <data name="NamePackage" xml:space="preserve">
    <value>Name Package</value>
  </data>
  <data name="PointTwoFourthBlock" xml:space="preserve">
    <value>Cancel anytime</value>
  </data>
  <data name="PointTwoNinthBlock" xml:space="preserve">
    <value>Cancel anytime</value>
  </data>
  <data name="PointОneFourthBlock" xml:space="preserve">
    <value>No credit card required</value>
  </data>
  <data name="PointОneNinthBlock" xml:space="preserve">
    <value>No credit card required</value>
  </data>
  <data name="SecondBodyThirdBlock" xml:space="preserve">
    <value>Company Owners &amp; Assigned Admins have a full control of adjusting features &amp; options for a particular pickup/delivery “on the go”. Company owners get a daily update on what’s happening with their equipment.  App gives 6 hours window for a driver to perform inspection of company vehicle every day. If a driver fails to perform PTI it will not let him use the App until inspection is completed &amp; submitted. Its an easy way to stay in control and be aware of all the damages that could be left after the driver. Company's Admin has a full control in gathering information and detailed pictures they need to send by a driver in order to to perform the inspection; as an example - interior, milage, dash lights, truck body, fluids levels, under hood, tires, bed storage, electrical connection, truck and trailer connection, trailer body, trailer tires, spare parts, and etc. PTI or vehicle inspection can be set from 1 up to 150 pictures.</value>
  </data>
  <data name="DriverCheck" xml:space="preserve">
    <value>Driver Check</value>
  </data>
  <data name="SecondHeaderThirdBlock" xml:space="preserve">
    <value>Company Equipment</value>
  </data>
  <data name="SecondPartHeaderNinthBlock" xml:space="preserve">
    <value>Cars with Truckonnow TMS</value>
  </data>
  <data name="SecondPlusSixthBlock" xml:space="preserve">
    <value>The free app was designed for owner-operators</value>
  </data>
  <data name="StartPackage" xml:space="preserve">
    <value>Start Today</value>
  </data>
  <data name="StartPackageBody" xml:space="preserve">
    <value>Flat Monthy Access Fee per Unit</value>
  </data>
  <data name="RepairLocator" xml:space="preserve">
    <value>Repair locator</value>
  </data>
  <data name="ThirdPlusSixthBlock" xml:space="preserve">
    <value>Import orders directly from load boards and brokers</value>
  </data>
  <data name="TryForFree" xml:space="preserve">
    <value>Try for Free</value>
  </data>
  <data name="CompanyRating" xml:space="preserve">
    <value>Company Rating</value>
  </data>
  <data name="Tracking" xml:space="preserve">
    <value>Tracking</value>
  </data>
  <data name="TicketContest" xml:space="preserve">
    <value>Ticket Contest</value>
  </data>
  <data name="LegalSupport" xml:space="preserve">
    <value>Legal Support</value>
  </data>
  <data name="FleetManagement" xml:space="preserve">
    <value>Fleet Management</value>
  </data>
  <data name="DispatchManagement" xml:space="preserve">
    <value>Dispatch Management</value>
  </data>
  <data name="SuccessSendEmail" xml:space="preserve">
    <value>Password reset link was sent to your Email</value>
  </data>
  <data name="ContactFormSuccessSend" xml:space="preserve">
    <value>Your information was submitted successfully!</value>
  </data>
  <data name="ContactFormNotSend" xml:space="preserve">
    <value>There is an issue submitting your information, please try again!</value>
  </data>
  <data name="ContactFormHaveError" xml:space="preserve">
    <value>Your information can not be submitted at this moment!</value>
  </data>
  <data name="ModalFormPhone" xml:space="preserve">
    <value>Your Phone</value>
  </data>
  <data name="ValidOnlyNumbersMessage" xml:space="preserve">
    <value>Please use numbers only</value>
  </data>
  <data name="ELDSerivce" xml:space="preserve">
    <value>ELD Service</value>
  </data>
</root>