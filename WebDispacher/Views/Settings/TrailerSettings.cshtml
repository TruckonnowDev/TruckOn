<div class="body">
    <div style="display:flex;">
    </div>
    <nav style="display:flex;justify-content:flex-start">
        @*<input class="btnSt activeBtn" type="button" value="Companies" onclick="window.location.href='@Url.Action("Companies", "Company")';" />
            <input style="width:150px" class="btnSt" type="button" value="All Users" onclick="window.location.href='@Url.Action("Users", "Company")';" />*@
        @foreach (var SetingTrailer in ViewBag.SetingsTrailer)
        {
            if (SetingTrailer.IsSelect)
            {
                <div class="btnSt activeBtn">
                    <span  onclick="window.location.href='@Url.Action("Trailer", "Settings")?idProfile='+ @SetingTrailer.Id;" ondblclick="window.location.href='@Url.Action("Trailer", "Settings")/RemoveProfile?idProfile='+ @SetingTrailer.Id;">@SetingTrailer.Name</span>
                    <input style="margin-left:10px;" type="radio" name="tabSet" checked="@SetingTrailer.IsUsed">
                </div>
            }
            else
            {
                <div class="btnSt">
                    <span  onclick="window.location.href='@Url.Action("Trailer", "Settings")?idProfile='+ @SetingTrailer.Id;" ondblclick="window.location.href='@Url.Action("Trailer", "Settings")/RemoveProfile?idProfile='+ @SetingTrailer.Id;">@SetingTrailer.Name</span>
                    <input style="margin-left:10px;" type="radio" name="tabSet" checked="@SetingTrailer.IsUsed">
                </div>
            }
        }
        <input class="btnAddSt" type="button" value="+" onclick="window.location.href='@Url.Action("Trailer", "Settings")/AddProfile'" />
    </nav>
    <div class="contentBody">
        @foreach (var transportVehicle in ViewBag.SelectSetingTrailer.TransportVehicles)
        {
            <div class="cardSetting">
                <div class="cardLayouts">
                    @foreach (var layout in transportVehicle.Layouts)
                    {
                    <div style="display:flex;" class="cardLayout">
                        <div>
                            <span>@layout.Name</span> @if (layout.IsUsed)
                            {
                                <img class="img" id="img_@layout.Id" src="@ViewBag.BaseUrl/Settings/Trailer/Image?name=../TrailerPattern/@transportVehicle.Type/@transportVehicle.Type@layout.Index&type=png" />
                            }
                            else
                            {
                                <img class="img" id="img_@layout.Id" style="opacity:0.4" src="@ViewBag.BaseUrl/Settings/Trailer/Image?name=../TrailerPattern/@transportVehicle.Type/@transportVehicle.Type@layout.Index&type=png" />
                            }
                        </div>
                        @if (ViewBag.SelectSetingTrailer.IsChange)
                        {
                            <div class="cardTool">
                                @if (layout.OrdinalIndex != 1)
                                {
                                    <div class="arrow-4 arrow-up" onclick="MovingLayoutUP(@layout.Id, @transportVehicle.Id, this)">
                                        <span class="arrow-4-left arrow-left"></span>
                                        <span class="arrow-4-right arrow-right"></span>
                                    </div>
                                }
                                <label class="container">
                                    <input type="checkbox" checked="@layout.IsUsed" onchange="CheckChange(this.checked, @layout.Id)">
                                    <span class="checkmark"></span>
                                </label>
                                @if (layout.OrdinalIndex != transportVehicle.Layouts.Count)
                                {
                                    <div class="arrow-4 arrow-down" onclick="MovingLayoutDown(@layout.Id, @transportVehicle.Id)">
                                        <span class="arrow-4-left arrow-left"></span>
                                        <span class="arrow-4-right arrow-right"></span>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                     }
                        </div>
                    </div>
        }
    </div>
</div>

<script>
    function CheckChange(checked, idLayout) {
        let imgElment = document.getElementById("img_" + idLayout);
        if (checked) {
            imgElment.style.opacity = "1";
        }
        else {
            imgElment.style.opacity = "0.4";
        }
        let url = "";
        let xmlHttp = new XMLHttpRequest();
        var body = 'idLayout=' + encodeURIComponent(idLayout);
        if (!checked) {
            url = "@ViewBag.BaseUrl/Settings/Trailer/UnSelectLayout";
        }
        else {
            url = "@ViewBag.BaseUrl/Settings/Trailer/SelectLayout";
        }
        xmlHttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status != 200) {
                alert("Server error, try again later");
            }
        };
        xmlHttp.open("POST", url, true);
        xmlHttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        xmlHttp.send(body);
    }

    function MovingLayoutUP(idLayout, idTransported, arrowElem) {
        let url = "@ViewBag.BaseUrl/Settings/Trailer/LayoutUP";
        let xmlHttp = new XMLHttpRequest();
        var body = 'idLayout=' + encodeURIComponent(idLayout) +
            '&idTransported=' + encodeURIComponent(idTransported);
        xmlHttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status != 200) {
                alert("Server error, try again later");
            }
            else if (this.readyState == 4 && this.status == 200) {
                location.reload()
            }
        };
        xmlHttp.open("POST", url, true);
        xmlHttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        xmlHttp.send(body);
    }

    function MovingLayoutDown(idLayout, idTransported) {
        let url = "@ViewBag.BaseUrl/Settings/Trailer/LayoutDown";
        let xmlHttp = new XMLHttpRequest();
        var body = 'idLayout=' + encodeURIComponent(idLayout) +
            '&idTransported=' + encodeURIComponent(idTransported);
        xmlHttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status != 200) {
                alert("Server error, try again later");
            }
            else if (this.readyState == 4 && this.status == 200) {
                location.reload()
            }
        };
        xmlHttp.open("POST", url, true);
        xmlHttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        xmlHttp.send(body);
    }
</script>

<style>
    * {
        margin: 0px;
    }


    .contentBody {
        width: 100%;
        height: 100px;
        border-top: solid;
        border-width: 1px;
        border-color: rgba(51, 51, 51, 0.3);
        display: flex;
    }

    .body {
        margin-top: 30px;
        margin-left: 5px;
        margin-right: 5px;
        padding: 10px;
    }

    .cardSetting {
        margin-left: 10px;
        width: 300px;
    }

    .cardLayouts {
        width: 95%;
        height: 80vh;
        margin: 10px;
        margin-left: 10px;
        overflow-y: scroll;
        overflow-x: hidden;
    }

    .cardLayout {
        border-bottom: none;
        border-right: none;
        border-top: groove;
        border-left: groove;
        border-color: rgba(151, 252, 126, 0.72);
    }

    .cardTool {
        padding: 15px;
    }

    .container {
        display: block;
        position: relative;
        padding-left: 35px;
        margin-bottom: 12px;
        margin-top: 12px;
        cursor: pointer;
        font-size: 17px;
        user-select: none;
    }

        .container input {
            opacity: 0;
            cursor: pointer;
            height: 0;
            width: 0;
        }

    .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 12px;
        width: 12px;
        background-color: transparent;
        border-radius: 5px;
        border: solid rgba(60, 154, 37, 0.72);
    }

    .container input:checked ~ .checkmark {
        background-color: transparent;
        border: none;
    }

    .checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }

    .container input:checked ~ .checkmark:after {
        display: block;
    }

    .container .checkmark:after {
        left: 5px;
        top: 1px;
        width: 5px;
        height: 10px;
        border: solid rgba(60, 154, 37, 0.72);
        border-width: 0 3px 3px 0;
        -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
        transform: rotate(45deg);
    }

    .arrow-4 {
        position: relative;
        cursor: pointer;
        height: 10px;
    }

    .arrow-4-left {
        position: relative;
        background-color: transparent;
        width: 4px;
        top: 4px;
        height: 12px;
        display: block;
        border-radius: 4px;
    }

        .arrow-4-left:after {
            content: "";
            background-color: rgba(60, 154, 37, 0.80);
            width: 4px;
            height: 12px;
            display: block;
            border-radius: 6px 10px 10px 6px;
            z-index: -1;
        }

    .arrow-4-right {
        position: relative;
        background-color: transparent;
        width: 4px;
        height: 12px;
        display: block;
        border-radius: 4px;
    }

        .arrow-4-right:after {
            content: "";
            background-color: rgba(60, 154, 37, 0.80);
            width: 4px;
            height: 12px;
            display: block;
            border-radius: 10px 6px 6px 10px;
            z-index: -1;
        }

    .arrow-up {
        top: 20px;
        transform: rotate(90deg);
    }

    .arrow-down {
        top: -20px;
        left: -18px;
        transform: rotate(-90deg);
    }

    .arrow-right {
        transform: rotate(-40deg);
    }

    .arrow-left {
        transform: rotate(40deg);
    }

    .img {
        margin-bottom: 10px;
        image-rendering: optimizeSpeed;
        width: 90%;
    }

    .btnSt {
        margin-left: 5px;
        border: none;
        width: 120px;
        height: 40px;
        background-color: white;
        font-size: 20px;
        color: rgb(51, 51, 51);
        border-color: rgba(51, 51, 51, 1);
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .btnAddSt {
        margin-left: 5px;
        border: none;
        width: 20px;
        height: 40px;
        background-color: white;
        font-size: 20px;
        color: rgb(51, 51, 51);
        border-color: rgba(51, 51, 51, 1);
    }

    .activeBtn {
        border-radius: 1px;
        border-top: solid;
        border-right: solid;
        border-left: solid;
        border-width: 1.3px;
        position: relative;
        top: 2px;
        border-color: rgba(51, 51, 51, 0.3);
    }
</style>