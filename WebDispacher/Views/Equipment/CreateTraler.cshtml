@using DaoModels.DAO.Enum;
@using Microsoft.AspNetCore.Mvc.Localization
@using WebDispacher.Constants;
@using WebDispacher.Service;

@inject IViewLocalizer Localizer
@model WebDispacher.ViewModels.Trailer.TrailerViewModel;
@{
    ViewData["Title"] = "Create Trailer";
}
<link rel="stylesheet" href="~/css/equipment/equipment.css" />
<body>
    <div class="admin truc">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <div class="tabContent">
                        <div class="title">
                            <a href="/Equipment/Trailers">@Localizer["BackToEquipment"]</a>
                        </div>
                        <div class="title">
                            <h1 class="text-info-header-1">@Localizer["AddNewTrailer"]</h1>
                        </div>
                        <form onsubmit="formatBeforeSubmit();" action="" method="post" enctype="multipart/form-data">
                            @Html.ValidationSummary()
                            <div class="col-md-6 pl-0">
                                <label class="big-label" for="">
                                    @Localizer["NameTrailer"]
                                    <span><abbr data-title="@Localizer["NameTrailerLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                    <input required type="text" class="height-input" id="name" asp-for="Name" maxlength="25">
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </label>
                                <label class="big-label" for="">
                                    @Localizer["Year"]
                                    <span><abbr data-title="@Localizer["YearLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                    <input type="text" class="height-input" id="year" asp-for="Year" maxlength="4">
                                    @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                                </label>
                                <label class="big-label" for="">
                                    @Localizer["Make"]
                                    <span><abbr data-title="@Localizer["MakeLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                    <input type="text" id="make" class="height-input" asp-for="Make" maxlength="15">
                                    @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })
                                </label>
                                <label class="big-label" for="">
                                    @Localizer["Model"]
                                    <span><abbr data-title="@Localizer["ModelLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                    <input type="text" id="model" class="height-input" asp-for="Model" maxlength="20">
                                    @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                                </label>
                            </div>
                            <div class="col-md-12 pl-0">
                                <div class="row">
                                    <div class="col-md-6 pr-1">
                                        <label class="big-label" for="">
                                            @Localizer["VehicleCategoryTrailer"]
                                            <span><abbr data-title="@Localizer["VehicleCategoryLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                            <br />
                                            <select class="height-input input-select" asp-for="VehicleCategoryId" id="vehicleCategoryDropdown">
                                                <option value="">@Localizer["ChooseVehicleCategory"]</option>
                                            </select>
                                            @Html.ValidationMessageFor(model => model.VehicleCategoryId, "", new { @class = "text-danger" })
                                        </label>
                                        <label class="big-label" for="">
                                            @Localizer["TypeTrailer"]
                                            <span><abbr data-title="@Localizer["TypeLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                            <br />
                                            <select class="height-input input-select" asp-for="TrailerTypeId" id="trailerTypeDropdown">
                                                <option value="">@Localizer["ChooseTrailerType"]</option>
                                            </select>
                                            @Html.ValidationMessageFor(model => model.TrailerTypeId, "", new { @class = "text-danger" })
                                        </label>
                                        <label class="big-label" for="">
                                            @Localizer["GroupTrailer"]
                                            <span><abbr data-title="@Localizer["GroupLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                            <br />
                                            <select required class="height-input input-select" asp-for="TrailerGroupId" id="trailerGroupDropdown">
                                                <option value="">@Localizer["ChooseGroupType"]</option>
                                                <option value="CreateGroup">@Localizer["CreateNewGroupType"]</option>
                                            </select>
                                            @Html.ValidationMessageFor(model => model.TrailerGroupId, "", new { @class = "text-danger" })
                                        </label>
                                    </div>
                                    <div class="col-md-6 image-col-place">
                                        <div class="swiper mySwiper">
                                            <div class="swiper-wrapper">
                                            </div>
                                            <div class="swiper-pagination"></div>
                                            <div class="swiper-button-next"></div>
                                            <div class="swiper-button-prev"></div>
                                        </div>
                                        <div class="single-img"></div>
                                    </div>
                                </div>
                            </div><div class="col-md-6 pl-0">
                                <label class="big-label" for="">
                                    @Localizer["HowLong"]
                                    <span><abbr data-title="@Localizer["HowLongLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                    <input type="text" class="height-input" asp-for="HowLong" maxlength="5">
                                    @Html.ValidationMessageFor(model => model.HowLong, "", new { @class = "text-danger" })
                                </label>
                                <label class="big-label" for="">
                                    @Localizer["Vin"]#
                                    <span><abbr data-title="@Localizer["VinLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                    <input type="text" class="height-input" asp-for="Vin" maxlength="17">
                                    @Html.ValidationMessageFor(model => model.Vin, "", new { @class = "text-danger" })
                                </label>
                                <label class="big-label" for="">
                                    @Localizer["PlateTrailer"] #
                                    <span><abbr data-title="@Localizer["PlateLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                    <input type="text" class="height-input" asp-for="Plate" maxlength="10">
                                    @Html.ValidationMessageFor(model => model.Plate, "", new { @class = "text-danger" })
                                </label>
                                <label class="big-label" for="">
                                    @Localizer["PlateExpTrailer"]
                                    <span><abbr data-title="@Localizer["PlateExpLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                    <input type="text" class="height-input" id="plateExp" asp-for="Exp" pattern="[0-9]{2}/[0-9]{2}">
                                    @Html.ValidationMessageFor(model => model.Plate, "", new { @class = "text-danger" })
                                </label>
                                <label class="big-label" for="">
                                    @Localizer["Color"]
                                    <span><abbr data-title="@Localizer["ColorLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                    <input type="text" id="color" class="height-input" asp-for="Color" maxlength="15">
                                    @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                                </label>
                                <label class="big-label" for="">
                                    @Localizer["AnnualIns"]
                                    <span><abbr data-title="@Localizer["AnnualInsLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                    <input type="text" class="height-input" asp-for="AnnualIns" id="annualIns" pattern="[0-9]{2}/[0-9]{2}/[0-9]{2}">
                                    @Html.ValidationMessageFor(model => model.AnnualIns, "", new { @class = "text-danger" })
                                </label>
                                <label class="big-label" for="">
                                    @Localizer["Owner"]
                                    <span><abbr data-title="@Localizer["OwnerLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                    <input type="text" id="owner" class="height-input" asp-for="Owner" maxlength="25">
                                    @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
                                </label>
                                <label class="big-label" for="">
                                    @Localizer["TrailerStatus"]
                                    <span><abbr data-title="@Localizer["TrailerStatusLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span>
                                    <select required class="height-input input-select" asp-for="TrailerStatusId" id="trailerStatusDropdown">
                                    </select>
                                    @Html.ValidationMessageFor(model => model.TrailerStatusId, "", new { @class = "text-danger" })
                                </label>
                                <label class="big-label" for="">
                                    @Localizer["TrailerLocationType"]
                                    <span><abbr data-title="@Localizer["TrailerLocationTypeInfo"]"><i class="bi bi-info-circle"></i></abbr></span><br />
                                    <select required class="height-input input-select" asp-for="LocationType" id="trailerLocationTypeDropdown">
                                        <option value="@LocationType.Mannually">@Localizer["MannuallyLocationType"]</option>
                                        <option value="@LocationType.GPS">@Localizer["GPSLocationType"]</option>
                                        <option value="@LocationType.Later">@Localizer["LaterLocationType"]</option>
                                    </select>
                                </label>
                                <label id="trailerLocationLabel" class="big-label" for="">
                                    @Localizer["TrailerLocation"]
                                    <span><abbr data-title="@Localizer["TrailerLocationLabelInfo"]"><i class="bi bi-info-circle"></i></abbr></span><br />
                                    <input class="height-input" id="trailerLocation" type="text" asp-for="LocationAddress" required>
                                    @Html.ValidationMessageFor(model => model.LocationAddress, "", new { @class = "text-danger" })
                                </label>
                                <div class="full-label">
                                    <p class="a-label">@Localizer["DocTrailerReg"]</p>
                                    <a class="pt-1 pb-1">@Localizer["InfoMessageUploadFiles"]</a>
                                    <div>
                                        <div class="file-group big-label">
                                            <div class="row">
                                                <div class="col-8 label-input d-flex align-items-center">
                                                    <div onclick="ClearFile(`fi1`, 'fl1');" class="fi" id="fl1"></div>
                                                </div>
                                                <div class="col-4 select-doc">
                                                    <div class="select-button-1 d-flex justify-content-end">
                                                        <label>
                                                            @Localizer["SelectDoc"]
                                                            <input class="height-input" id="fi1" type="file" onchange="GetFileName(this.value, 'fl1');" name="trailerRegistrationDoc" accept="application/pdf, image/jpeg, image/jpg">
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <p class="file-limit-exceeded text-danger"></p>
                                    </div>
                                </div>
                                <div class="full-label">
                                    <p class="a-label">@Localizer["DocLeaseAgreement"]</p>
                                    <a class="pt-1 pb-1">@Localizer["InfoMessageUploadFiles"]</a>
                                    <div>
                                        <div class="file-group big-label">
                                            <div class="row">
                                                <div class="col-8 label-input d-flex align-items-center">
                                                    <div onclick="ClearFile(`fi2`, 'fl2');" class="fi" id="fl2"></div>
                                                </div>
                                                <div class="col-4 select-doc">
                                                    <div class="select-button-1 d-flex justify-content-end">
                                                        <label>
                                                            @Localizer["SelectDoc"]
                                                            <input class="height-input" id="fi2" type="file" onchange="GetFileName(this.value, 'fl2');" name="leaseAgreementDoc" accept="application/pdf, image/jpeg, image/jpg">
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <p class="file-limit-exceeded text-danger"></p>
                                    </div>
                                </div>
                                <div class="full-label">
                                    <p class="a-label">@Localizer["DocTrailerAnnualIns"]</p>
                                    <a class="pt-1 pb-1">@Localizer["InfoMessageUploadFiles"]</a>
                                    <div>
                                        <div class="file-group big-label">
                                            <div class="row">
                                                <div class="col-8 label-input d-flex align-items-center">
                                                    <div onclick="ClearFile(`fi3`, 'fl3');" class="fi" id="fl3"></div>
                                                </div>
                                                <div class="col-4 select-doc">
                                                    <div class="select-button-1 d-flex justify-content-end">
                                                        <label>
                                                            @Localizer["SelectDoc"]
                                                            <input class="height-input" id="fi3" type="file" onchange="GetFileName(this.value, 'fl3');" name="trailerAnnualInspectionDoc" accept="application/pdf, image/jpeg, image/jpg">
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <p class="file-limit-exceeded text-danger"></p>
                                    </div>
                                </div>
                                <input type="hidden" value="" name="dateTimeLocal" />
                                <button class="height-input btn1 big-label big-font-size">@Localizer["SaveInfo"]</button>
                            </div>
                        </form>
                    </div>
                </div>
                <div class="col-md-6">
                    <div id="Bumperpool2CarEeclosedTraile" class="row" style="display:none;">
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TrailerPattern/Bumperpool2CarEeclosedTraile/Bumperpool2CarEeclosedTraile1.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TrailerPattern/Bumperpool2CarEeclosedTraile/Bumperpool2CarEeclosedTraile2.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TrailerPattern/Bumperpool2CarEeclosedTraile/Bumperpool2CarEeclosedTraile3.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TrailerPattern/Bumperpool2CarEeclosedTraile/Bumperpool2CarEeclosedTraile4.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TrailerPattern/Bumperpool2CarEeclosedTraile/Bumperpool2CarEeclosedTraile5.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TrailerPattern/Bumperpool2CarEeclosedTraile/Bumperpool2CarEeclosedTraile6.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TrailerPattern/Bumperpool2CarEeclosedTraile/Bumperpool2CarEeclosedTraile7.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TrailerPattern/Bumperpool2CarEeclosedTraile/Bumperpool2CarEeclosedTraile8.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TrailerPattern/Bumperpool2CarEeclosedTraile/Bumperpool2CarEeclosedTraile9.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TrailerPattern/Bumperpool2CarEeclosedTraile/Bumperpool2CarEeclosedTraile10.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TrailerPattern/Bumperpool2CarEeclosedTraile/Bumperpool2CarEeclosedTraile11.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TrailerPattern/Bumperpool2CarEeclosedTraile/Bumperpool2CarEeclosedTraile12.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TrailerPattern/Bumperpool2CarEeclosedTraile/Bumperpool2CarEeclosedTraile13.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TrailerPattern/Bumperpool2CarEeclosedTraile/Bumperpool2CarEeclosedTraile14.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TrailerPattern/Bumperpool2CarEeclosedTraile/Bumperpool2CarEeclosedTraile15.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TrailerPattern/Bumperpool2CarEeclosedTraile/Bumperpool2CarEeclosedTraile16.png&type=png" alt="">
                        </div>
                        <div class="col-md-auto">
                            <img src="@ViewBag.BaseUrl/Equipment/Image?name=../TrailerPattern/Bumperpool2CarEeclosedTraile/Bumperpool2CarEeclosedTraile17.png&type=png" alt="">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="modalTrailerGroupFormContainer"></div>
    <div id="modalTrailerStatusFormContainer"></div>
</body>
<script>
    function formatBeforeSubmit() {
        const trailerLocationTypeSelected = $("#trailerLocationTypeDropdown").val();
        if (trailerLocationTypeSelected === '@LocationType.Later') {
            $("#trailerLocation").val('none');
        }

        const inputPlateExp = document.getElementById('plateExp');
        const partsPlateExp = inputPlateExp.value.split('/');
        if (partsPlateExp.length === 2) {
            const monthPlateExp = parseInt(partsPlateExp[0], 10);
            const yearPlateExp= parseInt('20' + partsPlateExp[1], 10);
            const lastDayOfMonthPlateExp = new Date(yearPlateExp, monthPlateExp, 0).getDate();

            const formattedDate = partsPlateExp[0] + '.' + lastDayOfMonthPlateExp + '.' + '20' + partsPlateExp[1];

            inputPlateExp.value = formattedDate;
        }
        
        const inputAnnualIns = document.getElementById('annualIns');
        const partsAnnualIns = inputAnnualIns.value.split('/');
        if (partsAnnualIns.length === 3) {
            const formattedDate = partsAnnualIns[0] + '.' + partsAnnualIns[1] + '.' + '20' + partsAnnualIns[2];
            inputAnnualIns.value = formattedDate;
        }
    }
</script>

<script>
    $(document).ready(function () {
        var swiper = new Swiper(".mySwiper", {
            navigation: {
                nextEl: ".swiper-button-next",
                prevEl: ".swiper-button-prev",
            },
            pagination: {
                el: ".swiper-pagination",
            },
        });

        $("#trailerTypeDropdown").change(function () {
            var selectedText = $("#trailerTypeDropdown option:selected").text();

            var imageColPlaceWrapper = $(".image-col-place .swiper-wrapper");
            imageColPlaceWrapper.empty();

            var imageColPlace = $(".image-col-place .swiper");
            imageColPlace.css("display", "none");

            var singleImage = $(".image-col-place .single-img");
            singleImage.empty();

            swiper.removeAllSlides();

            if (selectedText) {
                $.ajax({
                    url: `/Equipment/GetTrailerSlug?vehicleName=${selectedText}`,
                    method: 'GET',
                    success: function (data) {
                        imageColPlace.css("display", "block");
                        var slug = data;

                        $.ajax({
                            url: `/Equipment/GetTrailerImages?vehicleSlug=${slug}`,
                            method: 'GET',
                            success: function (data) {
                                data.forEach(function (fileName) {
                                    var srcPhoto = `@Config.BaseReqvesteUrl/Equipment/Image?name=../TrailerPattern/${slug}/${fileName}&type=png`;

                                    swiper.appendSlide(`<div class="swiper-slide"><img src="${srcPhoto}" alt=""></div>`);
                                });

                                swiper.update();
                            },
                            error: function () {
                            }
                        });
                    },
                    error: function () {
                    }
                });
            }
        });

        var loadTrailerTypesUrl = "/Equipment/GetTrailerTypes";

        $("#vehicleCategoryDropdown").change(function () {
            var categoryId = $(this).val();

            var imageColPlaceWrapper = $(".image-col-place .swiper-wrapper");
            imageColPlaceWrapper.empty();

            var imageColPlace = $(".image-col-place .swiper");
            imageColPlace.css("display", "none");

            var singleImage = $(".image-col-place .single-img");
            singleImage.empty();

            swiper.removeAllSlides();
            var trailerTypeDropdown = $('#trailerTypeDropdown');
            trailerTypeDropdown.empty();

            trailerTypeDropdown.append($('<option>', {
                value: '',
                text: '@Localizer["ChooseTrailerType"]',
            }));

            if (categoryId === null || categoryId === undefined || categoryId === '') {
                return;
            }

            $.ajax({
                url: loadTrailerTypesUrl,
                data: { categoryId: categoryId },
                method: 'GET',
                success: function (trailers) {
                    var trailerTypeDropdown = $('#trailerTypeDropdown');

                    $.each(trailers, function (index, item) {
                        trailerTypeDropdown.append($('<option>', {
                            value: item.id,
                            text: item.name
                        }));
                    });

                    if (selectedTrailerTypeId) {
                        if (trailerTypeDropdown.find('option[value="' + selectedTrailerTypeId + '"]').length > 0) {
                            trailerTypeDropdown.val(selectedTrailerTypeId);
                            trailerTypeDropdown.change();
                        }
                    } else {

                        $.ajax({
                            url: `/Equipment/GetTrailerImages?vehicleSlug=${trailers[0].slug}`,
                            method: 'GET',
                            success: function (data) {
                                var srcPhoto = `@Config.BaseReqvesteUrl/Equipment/Image?name=../TrailerPattern/${trailers[0].slug}/${data[0]}&type=png`;
                                var imageElement = `<img src="${srcPhoto}" alt="">`;
                                singleImage.append(imageElement);
                            },
                            error: function () {
                            }
                        });
                    }
                },
            });
        });

        var selectedVehicleCategoryId = "@ViewData["SelectedVehicleCategoryId"]";
        var selectedTrailerTypeId = "@ViewData["SelectedTrailerTypeId"]";
        var selectedTrailerGroupId = "@ViewData["SelectedTrailerGroupId"]";
        var selectedTrailerStatusId = "@ViewData["SelectedTrailerStatusId"]";

        $.ajax({
            url: '/Equipment/Trailer/GetVehicleCategiries',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                var categoryDropdown = $('#vehicleCategoryDropdown');
                categoryDropdown.empty();
                categoryDropdown.append($('<option>', {
                    value: '',
                    text: '@Localizer["ChooseVehicleCategory"]'
                }));

                var imageColPlace = $(".image-col-place .swiper-wrapper");
                imageColPlace.empty();

                $.each(data, function (index, item) {
                    categoryDropdown.append($('<option>', {
                        value: item.id,
                        text: item.name
                    }));
                });

                if (selectedVehicleCategoryId) {
                    if (categoryDropdown.find('option[value="' + selectedVehicleCategoryId + '"]').length > 0) {
                        categoryDropdown.val(selectedVehicleCategoryId);
                    }
                }
                categoryDropdown.change();
            },
            error: function () {
            }
        });

        loadDropdownItems();

        $.ajax({
            url: '@Url.Action("GetTrailerStatusDropdownItems", "Equipment")',
            type: 'GET',
            success: function (result) {
                var dropdown = $('#trailerStatusDropdown');
                dropdown.empty();

                dropdown.append($('<option>', {
                    value: '',
                    text: '@Localizer["ChooseTrailerStatus"]'
                }));

                result.forEach(function (item) {
                    dropdown.append($('<option>', {
                        value: item.id,
                        text: item.name
                    }));
                });

                dropdown.append($('<option>', {
                    value: 'CreateTrailerStatus',
                    text: '@Localizer["CreateNewTrailerStatus"]',
                    class: 'font-weight-bold'
                }));
            },
            error: function () {
            }
        });

        var trailerLocationLabel = $('#trailerLocationLabel');
        var trailerLocationTypeVal = $('#trailerLocationTypeDropdown').val();

        shouldBeVisible(trailerLocationTypeVal).then(result => {
            if (result) {
                trailerLocationLabel.show();
                $('#trailerLocation').prop('required', true);
                $('#trailerLocation').val('@Model?.LocationAddress');
            } else {
                trailerLocationLabel.hide();
                $('#trailerLocation').prop('required', false);
            }
        });

        $('#trailerGroupDropdown').change(function () {
            var selectedValue = $(this).val();

            if (selectedValue === "CreateGroup") {
                checkAndRedirect('', function () {
                    $('#trailerGroupDropdown').val($('#trailerGroupDropdown option:first').val());
                });
            }
        });

        $('#trailerStatusDropdown').change(function () {
            var selectedValue = $(this).val();

            if (selectedValue === "CreateTrailerStatus") {
                checkAndRedirectTrailerStatus('', function () {
                    $('#trailerStatusDropdown').val($('#trailerStatusDropdown option:first').val());
                });
            }
        });

        $('#trailerLocationTypeDropdown').change(function () {
            var selectedValue = $(this).val();
            var trailerLocationLabel = $('#trailerLocationLabel');
            shouldBeVisible(selectedValue).then(result => {
                if (result) {
                    trailerLocationLabel.show();
                    $('#trailerLocation').prop('required', true);
                } else {
                    trailerLocationLabel.hide();
                    $('#trailerLocation').prop('required', false);
                    $('#trailerLocation').val('');
                }
            });
        });
    });

    async function shouldBeVisible(selectedLocationType) {
        try {
            const response = await $.ajax({
                url: '@Url.Action("IsVisibleTrailerLocation", "Equipment")',
                type: 'GET',
                data: { selectedLocationType }
            });

            return response;
        } catch (error) {
            return false;
        }
    }

    function loadDropdownItems() {
        $.ajax({
            url: '@Url.Action("GetTrailerGroupsDropdownItems", "Equipment")',
            type: 'GET',
            success: function (result) {
                var dropdown = $('#trailerGroupDropdown');
                dropdown.empty();

                dropdown.append($('<option>', {
                    value: '',
                    text: '@Localizer["ChooseGroupType"]'
                }));

                result.forEach(function (item) {
                    dropdown.append($('<option>', {
                        value: item.id,
                        text: item.name
                    }));
                });

                dropdown.append($('<option>', {
                    value: 'CreateGroup',
                    text: '@Localizer["CreateNewGroupType"]',
                    class: 'font-weight-bold'
                }));
            },
            error: function () {
                console.error("Ошибка при загрузке элементов дропдауна.");
            }
        });
    }
    function loadTrailerStatusDropdownItems() {
        $.ajax({
            url: '@Url.Action("GetTrailerStatusDropdownItems", "Equipment")',
            type: 'GET',
            success: function (result) {
                var dropdown = $('#trailerStatusDropdown');
                dropdown.empty();

                dropdown.append($('<option>', {
                    value: '',
                    text: '@Localizer["ChooseTrailerStatus"]'
                }));

                result.forEach(function (item) {
                    dropdown.append($('<option>', {
                        value: item.id,
                        text: item.name
                    }));
                });

                dropdown.append($('<option>', {
                    value: 'CreateTrailerStatus',
                    text: '@Localizer["CreateNewTrailerStatus"]',
                    class: 'font-weight-bold'
                }));
            },
            error: function () {
            }
        });
    }

    function checkAndRedirect(url, callback) {
        var modalContainer = $('#modalTrailerGroupFormContainer');

        if (modalContainer.length === 0 || modalContainer.html().trim() === '') {
            modalContainer.load('@Url.Action("GetCreateTrailerGroupForm", "Equipment")', function () {
                $("#addFirstGroup").modal('show');

                $('#addFirstGroup form').submit(function (event) {
                    event.preventDefault();
                    saveGroupAndRefreshDropdown(url, callback);
                });

                $('#addFirstGroup').on('hidden.bs.modal', function () {
                    if (typeof callback === 'function') {
                        callback();
                    }
                });
            });
        }
        else {
            $("#addFirstGroup").modal('show');
        }
    }

    function checkAndRedirectTrailerStatus(url, callback) {
        var modalContainer = $('#modalTrailerStatusFormContainer');

        modalContainer.load('@Url.Action("GetCreateTrailerStatusForm", "Equipment")', function () {
            $("#addTrailerStatus").modal('show');

            $('#modalTrailerStatusFormContainer').on('submit', '#addTrailerStatus form', function (event) {
                event.preventDefault();
                saveTrailerStatusAndRefreshDropdown(url, callback);
            });

            $('#addTrailerStatus').on('hidden.bs.modal', function () {
                if (typeof callback === 'function') {
                    callback();
                }
            });
        });
    }

    function saveGroupAndRefreshDropdown(url, callback) {
        var form = $('#addFirstGroup form');

        $.ajax({
            url: form.attr('action'),
            type: 'POST',
            data: form.serialize(),
            success: function (result) {
                loadDropdownItems();

                $('#addFirstGroup').modal('hide');
                $('#groupName').val('');
                SuccessAlert("@Localizer["TrailerGroupSuccessAdded"]");

                if (typeof callback === 'function') {
                    callback();
                }
            },
            error: function () {
                WarningAlert("@Localizer["TrailerGroupNotAdded"]")
            }
        });
    }

    function saveTrailerStatusAndRefreshDropdown(url, callback) {
        var form = $('#addTrailerStatus form');
        console.log(form);
        $.ajax({
            url: '/Equipment/Trailer/SaveCustomStatus',
            type: 'POST',
            data: form.serialize(),
            success: function (data) {
                var newBody = $('.modal-body', data);

                var isValid = newBody.find('[name="IsValid"]').val() == 'True';

                if (isValid) {
                    $('#addTrailerStatus').modal('hide');
                    $('#statusName').val('');
                    SuccessAlert("@Localizer["TrailerStatusSuccessAdded"]");

                    if (typeof callback === 'function') {
                        callback();
                    }

                    loadTrailerStatusDropdownItems();
                } else {
                    $('#modalTrailerStatusFormContainer').find('.modal-body').replaceWith(newBody);
                    initializeTrailerStatusScripts();
                }
            },
            error: function () {
                WarningAlert("@Localizer["TrailerStatusNotAdded"]")
            }
        });
    }
</script>

<script src="~/js/input-replacer.js"></script>
<script>
    setReplacer(document.querySelector('#year'), @ExpressionConstants.OnlyDigits);
    setReplacer(document.querySelector('#make'), @ExpressionConstants.OnlyLetters);
    setReplacer(document.querySelector('#model'), @ExpressionConstants.OnlyLettersDigitsDashes);
    setReplacer(document.querySelector('#color'), @ExpressionConstants.OnlyLetters);
    setReplacer(document.querySelector('#owner'), @ExpressionConstants.OnlyLetters);

    $(function () {
        $("#plateExp").mask("99/99", { placeholder: "MM/YY" });
        $("#annualIns").mask("99/99/99", { placeholder: "MM/DD/YY" });
    });

    $("#fi1").change(function () {
        CheckValid('fl1', 'fi1');
    });

    $("#fi2").change(function () {
        CheckValid('fl2', 'fi2');
    });

    $("#fi3").change(function () {
        CheckValid('fl3', 'fi3');
    });

    $(".big-font-size").on('click', function () {
        CheckValid('fl1', 'fi1');
        CheckValid('fl2', 'fi2');
        CheckValid('fl3', 'fi3');

        dateInput.value = GetDateTimeInFormat(new Date());
    });

    var curentSelectPattern;

    function SelectTrailer(value) {
        if (curentSelectPattern || value == "") {
            curentSelectPattern.style.display = "none";
        }
        let selectTypeDiv = document.getElementById(value);
        if (selectTypeDiv) {
            selectTypeDiv.style.display = "flex";
            curentSelectPattern = selectTypeDiv;
        }
    }
</script>

<style>
    .full-label {
        padding: 3px 0px 4px;
    }

    .thd {
        width: 100%;
        display: flex;
    }

    .tabContent form label {
        width: 100% !important;
    }

    .image-col-place {
        height: 264px;
    }

        .image-col-place img {
            height: 100%;
            width: auto;
            max-height: 100%;
            max-width: 100%;
            object-fit: contain;
        }

        .image-col-place .swiper {
            width: auto;
            height: 100%;
        }

        .image-col-place .single-img {
            vertical-align: middle;
            text-align: center;
            width: 100%;
            height: 100%;
            display: flex;
        }

        .image-col-place .swiper .swiper-wrapper {
            width: auto;
            height: 100%;
        }

            .image-col-place .swiper .swiper-wrapper .swiper-slide {
                width: 100%;
                height: 100%;
                text-align: center;
                font-size: 18px;
                background: #fff;
                display: flex;
                justify-content: center;
                align-items: center;
            }

                .image-col-place .swiper .swiper-wrapper .swiper-slide img {
                    display: block;
                    width: auto;
                    height: auto;
                    object-fit: cover;
                    max-height: 100%;
                    max-width: 76%;
                }

        .image-col-place .swiper .swiper-button-next, .swiper-button-prev {
            width: calc(var(--swiper-navigation-size)/ 23 * 23);
        }

    .font-weight-bold {
        font-weight: 700;
    }

    :root {
        --swiper-navigation-size: 44px;
    }
</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>