@using Microsoft.AspNetCore.Mvc.Localization
@using WebDispacher.Constants;

@model WebDispacher.ViewModels.Contact.ContactViewModel

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "Edit Contact";
}

<body>
    <div class="admin">
        <div class="container">
            <div class="row">
                <div class="col-md-5">
                    <div class="tabContent">
                        <h2>@Localizer["InfoAboutContact"]</h2>
                        <form action="" method="post">
                            <div class="validation" asp-validation-summary="ModelOnly"></div>
                            <label for="">
                                <label class="mb-0" asp-for="Name"></label>
                                <input type="text" name="Name" value="@Model.Name" required>
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </label>
                            <label for="">
                                <label class="mb-0" asp-for="Position"></label>
                                <input type="text" name="Position" id="position">
                                @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                            </label>
                            <label for="">
                                <label class="mb-0" asp-for="Email"></label>
                                <input type="email" id="email" name="Email" value="@Model.Email" pattern="@PatternConstants.Email" required>
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </label>
                            <div style="width:500px">
                                <div style="display:flex;justify-content:space-between;">
                                    <div class="elem" style="width: 75%">
                                        <label class="mb-0" asp-for="Phone" style="width:100%;"></label>
                                        <label for="" style="width:100%">
                                            <input type="text" id="phone" name="Phone" value="@Model.Phone" placeholder="(XXX)-XXX-XXXX" required>
                                        </label>
                                    </div>
                                    <div class="elem" style="width: 20%">
                                        <label class="mb-0" asp-for="Ext" style="width:100%;"></label>
                                        <label for="" style="width:100%">
                                            <input type="text" name="Ext" id="Ext" class="mt-0" maxlength="5" required />
                                        </label>

                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                            <input name="Id" value="@Model.Id" style="display:none" />
                            <input class="btn1" type="submit" value="@Localizer["Save"]" />
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

<style>
    .intl-tel-input {
        width: 100%;
    }
</style>

<script>
    $.fn.setCursorPosition = function (pos) {
        if ($(this).get(0).setSelectionRange) {
            $(this).get(0).setSelectionRange(pos, pos);
        }
        else if ($(this).get(0).createTextRange) {
            var range = $(this).get(0).createTextRange();
            range.collapse(true);
            range.moveEnd('character', pos);
            range.moveStart('character', pos);
            range.select();
        }
    };

    $('input[name="Phone"]').on('click', function () {
        $(this).setCursorPosition(1);
    });
    $('#phone').on('input invalid', function () {
        this.setCustomValidity('')
        if (this.validity.valueMissing) {
            this.setCustomValidity("@Localizer["PhoneValidMessage"]")
        }
        if (this.validity.typeMismatch) {
            this.setCustomValidity("@Localizer["PhoneValidMessage"]")
        }
        if (this.validity.patternMismatch) {
            this.setCustomValidity("@Localizer["PhoneValidMessage"]")
        }
    })

    $('#email').on('input invalid', function () {
        this.setCustomValidity('')
        if (this.validity.valueMissing) {
            this.setCustomValidity("@Localizer["EmailValidMessage"]")
        }
        if (this.validity.typeMismatch) {
            this.setCustomValidity("@Localizer["EmailValidMessage"]")
        }
        if (this.validity.patternMismatch) {
            this.setCustomValidity("@Localizer["EmailValidMessage"]")
        }
    })

    $(document).ready(function () {
        $("#phone").mask("(999)-999-9999", { placeholder: "(XXX)-XXX-XXXX" });
    });
</script>