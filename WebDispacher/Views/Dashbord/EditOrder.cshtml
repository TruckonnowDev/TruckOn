@using Microsoft.AspNetCore.Mvc.Localization

@model WebDispacher.ViewModels.ShippingViewModel

@inject IViewLocalizer Localizer

<body>
    <div class="admin Billing">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <div class="tabContente">
                        <div class="title text-info-padding-5">
                            <a href="#" onclick="history.back();">@Localizer["BackToOrders"]</a>
                        </div>
                        <h2 style="margin-block: 15px;">@Localizer["CreateOrderHeader"]</h2>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="tabContente">
                        <form action="SavaOrder" method="post">
                            <input id="idOrder" type="text" name="Id" style="display:none;" value="@Model.Id" />
                            <div class="w1">
                                <label for="">
                                    @Localizer["LoadId"]
                                    <input type="text" id="idLoad" name="IdOrder" value="@Model.IdOrder">
                                </label>
                                <label for="">
                                    @Localizer["Status"]
                                    <select name="status" id="statusId">
                                        <option value="NewLoad">@Localizer["NewLoad"]</option>
                                        <option value="Picked up">@Localizer["PickedUp"]</option>
                                        <option value="Delivered">@Localizer["Delivered"]</option>
                                    </select>
                                </label>
                                <label for="">
                                    @Localizer["Contact"]
                                    <input type="text" id="contactId" name="ContactC" value="@Model.ContactC">
                                </label>
                                <label for="">
                                    @Localizer["Phone"]
                                    <input type="tel" id="phoneC" name="PhoneC" value="@Model.PhoneC">
                                </label>
                                <h3>@Localizer["PichupHeader"]</h3>
                                <label for="">
                                    @Localizer["Name"]
                                    <input type="text" id="nameP" value="@Model.NameP" placeholder="@Localizer["Name"]" name="NameP">
                                </label>
                                <label for="">
                                    @Localizer["Contact"]
                                    <input type="text" id="contactNameP" name="ContactNameP" value="@Model.ContactNameP" placeholder="@Localizer["ContactName"]">
                                </label>
                                <label for="">
                                    @Localizer["Address"]
                                    <input type="text" id="addressP" name="AddresP" value="@Model.AddresP" placeholder="@Localizer["Address"]" required>
                                </label>
                                <label for="">
                                    @Localizer["City"]
                                    <input type="text" id="cityP" name="CityP" value="@Model.CityP" placeholder="@Localizer["City"]" required>
                                </label>
                                <label for="">
                                    @Localizer["State"]
                                    <input type="text" id="stateP" name="StateP" value="@Model.StateP" pattern="[A-Z]{2}" placeholder="XX - @Localizer["State"]" required>
                                </label>
                                <label for="">
                                    @Localizer["Zip"]
                                    <input type="text" id="zipP" name="ZipP" value="@Model.ZipP" pattern="[0-9]{5}" placeholder="XXXXX - @Localizer["ZipCode"]" required>
                                </label>
                                <label for="">
                                    @Localizer["Phone"]
                                    <input type="tel" id="phoneP" name="PhoneP" placeholder="XXXXXXXXXX - @Localizer["PhoneNumber"]" pattern="[0-9]{4,12}" value="@Model.PhoneP" required>
                                </label>
                                <label for="">
                                    @Localizer["Email"]
                                    <input id="emailP" name="EmailP" type="email" value="@Model.EmailP" placeholder="@Localizer["Email"]" required>
                                </label>
                                <label for="">
                                    @Localizer["ScheduledPickupDate"]
                                    <input type="text" id="scheduledPickupDateP" name="PickupExactly" value="@Model.PickupExactly">
                                </label>
                            </div>
                            <div class="w1">
                                <label style="margin-bottom: 7px;" for="">
                                    @Localizer["InstructionsHeader"]
                                    <textarea type="text" id="instructions" class="textarea-resize-none" name="Titl1DI" style="height:192px;">@Model.Titl1DI</textarea>
                                </label>
                                <label for="">
                                    @Localizer["Fax"]
                                    <input type="text" id="faxC" name="FaxC" value="@Model.FaxC">
                                </label>
                                <label for="">
                                    Iccmc
                                    <input type="text" id="iccmcC" name="IccmcC" value="@Model.IccmcC">
                                </label>
                                <h3>@Localizer["DeliveryInfoHeader"]</h3>
                                <label for="">
                                    @Localizer["Name"]
                                    <input type="text" id="nameD" name="NameD" value="@Model.NameD" placeholder="@Localizer["Name"]">
                                </label>
                                <label for="">
                                    @Localizer["Contact"]
                                    <input type="text" id="contactD" name="ContactNameD" value="@Model.ContactNameD" placeholder="@Localizer["ContactName"]">
                                </label>
                                <label for="">
                                    @Localizer["Address"]
                                    <input type="text" id="addressD" name="AddresD" value="@Model.AddresD" placeholder="@Localizer["Address"]" required>
                                </label>
                                <label for="">
                                    @Localizer["City"]
                                    <input type="text" id="cityD" name="CityD" value="@Model.CityD" placeholder="@Localizer["City"]" required>
                                </label>
                                <label for="">
                                    @Localizer["State"]
                                    <input type="text" id="stateD" name="StateD" pattern="[A-Z]{2}" value="@Model.StateD" placeholder="XX - @Localizer["State"]" required>
                                </label>
                                <label for="">
                                    @Localizer["Zip"]
                                    <input type="text" id="zipD" name="ZipD" value="@Model.ZipD" pattern="[0-9]{5}" placeholder="XXXXX - @Localizer["ZipCode"]" required>
                                </label>
                                <label for="">
                                    @Localizer["Phone"]
                                    <input name="PhoneD" id="phoneD" placeholder="XXXXXXXXXX - @Localizer["PhoneNumber"]" type="tel" pattern="[0-9]{4,12}" value="@Model.PhoneD" required>
                                </label>
                                <label for="">
                                    @Localizer["Email"]
                                    <input name="EmailD" id="emailD" type="email" value="@Model.EmailD" placeholder="@Localizer["Email"]" required>
                                </label>
                            </div>
                            <div class="w1">
                                <h3>@Localizer["PaymentInfoHeader"]</h3>
                                <label for="">
                                    @Localizer["PaymentMethod"]
                                    <select id="paymentMethod" name="TotalPaymentToCarrier" required>
                                        <option value="COP">COP</option>
                                        <option value="COD">COD</option>
                                        <option value="1 days">1 days</option>
                                        <option value="2 days">2 days</option>
                                        <option value="5 days">5 days</option>
                                        <option value="10 days">10 days</option>
                                        <option value="15 days">15 days</option>
                                    </select>
                                </label>
                                <label for="">
                                    @Localizer["Price"]
                                    <input type="text" id="price" name="PriceListed" value="@Model.PriceListed" required>
                                </label>
                                <label for="">
                                    @Localizer["BrokenFee"]
                                    <input type="text" id="brokerFee" name="BrokerFee" value="@Model.BrokerFee">
                                </label>
                                <input class="btn1" type="submit" value="@Localizer["Save"]" />
                                <button class="btn2">@Localizer["ArchiveOrder"]</button>
                                <button class="btn3">@Localizer["DeleteOrder"]</button>
                            </div>
                        </form>
                    </div>
                </div>
                <div class="col-md-12" style="padding-bottom: 20px">
                    <div class="title">
                        <h1>@Localizer["VehsHeader"]</h1>
                        <button class="btn1" onclick="AddVech(this)">@Localizer["AddVeh"]</button>
                    </div>
                    <div class="table">
                        <div class="tr blue">
                            <div class="td">№</div>
                            <div class="td">VIN</div>
                            <div class="td">@Localizer["Year"]</div>
                            <div class="td">@Localizer["Make"]</div>
                            <div class="td">@Localizer["Model"]</div>
                            <div class="td">@Localizer["Type"]</div>
                            <div class="td">@Localizer["Color"]</div>
                            <div class="td">@Localizer["LotNumber"]</div>
                            <div class="td">&nbsp;</div>
                            <div class="td">&nbsp;</div>
                            <div class="td">&nbsp;</div>
                            <div class="td">&nbsp;</div>
                        </div>
                        @if (Model.VehiclwInformations != null)
                        {
                            @for (int i = 0; i < Model.VehiclwInformations.Count; i++)
                            {
                                <form action="SavaVech" method="POST" class="tr" id="@Model.VehiclwInformations[i].Id">
                                    <div class="td">@i</div>
                                    <div class="td"><input type='text' name="VIN" value="@Model.VehiclwInformations[i].VIN" /></div>
                                    <div class="td"><input type='text' name="Year" value="@Model.VehiclwInformations[i].Year" /></div>
                                    <div class="td"><input type='text' name="Make" value="@Model.VehiclwInformations[i].Make" /></div>
                                    <div class="td"><input type='text' name="Model" value="@Model.VehiclwInformations[i].Model" /></div>
                                    <div class="td">
                                        <select name="Type">
                                            <option>@Model.VehiclwInformations[i].Type</option>
                                            <option>Sedan</option>
                                            <option>Suv</option>
                                            <option>Coupe</option>
                                            <option>PickUp</option>
                                            <option>Tricycle</option>
                                            <option>Sport bike</option>
                                            <option>Touring motorcycle</option>
                                            <option>Cruise motorcycle</option>
                                        </select>
                                    </div>
                                    <div class="td"><input type='text' name="Color" value="@Model.VehiclwInformations[i].Color" /></div>
                                    <div class="td"><input type='text' name="LotNumber" value="@Model.VehiclwInformations[i].Lot" /></div>
                                    <div class="td"><input type='text' class="delete delete-border-cursor" onclick="DeleteVech(@Model.VehiclwInformations[i].Id)" /></div>
                                    <div class="td"><input type='submit' class="delete-border-cursor" value="@Localizer["Save"]" /></div>
                                    <input type="text" name="idVech" style="display:none;" value="@Model.VehiclwInformations[i].Id" />
                                    <input type="text" name="idOrder" style="display:none;" value="@Model.Id" />
                                </form>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

<script>
$(document).ready(function() {
    if ("@Model.CurrentStatus" != null)
    {
        $('#statusId option[value="@Model.CurrentStatus"]').prop('selected', true);
    }
    if ("@Model.TotalPaymentToCarrier" != null)
    {
        $('#paymentMethod option[value="@Model.TotalPaymentToCarrier"]').prop('selected', true);
    }
});

    function AddVech(btnE) {
        const loadId = document.getElementById('idLoad').value;
        const status = document.getElementById('statusId').value;
        const nameP = document.getElementById('nameP').value;
        const contactNameP = document.getElementById('contactNameP').value;
        const addressP = document.getElementById('addressP').value;
        const cityP = document.getElementById('cityP').value;
        const stateP = document.getElementById('stateP').value;
        const zipP = document.getElementById('zipP').value;
        const phoneP = document.getElementById('phoneP').value;
        const emailP = document.getElementById('emailP').value;
        const scheduledPickupDateP = document.getElementById('scheduledPickupDateP').value;
        const instructions = document.getElementById('instructions').value;
        const nameD = document.getElementById('nameD').value;
        const contactD = document.getElementById('contactD').value;
        const addressD = document.getElementById('addressD').value;
        const cityD = document.getElementById('cityD').value;
        const stateD = document.getElementById('stateD').value;
        const zipD = document.getElementById('zipD').value;
        const phoneD = document.getElementById('phoneD').value;
        const emailD = document.getElementById('emailD').value;
        const paymentMethod = document.getElementById('paymentMethod').value;
        const price = document.getElementById('price').value;
        const brokerFee = document.getElementById('brokerFee').value;
        const faxC = document.getElementById('faxC').value;
        const iccmcC = document.getElementById('iccmcC').value;
        const contactC = document.getElementById('contactId').value;
        const phoneC = document.getElementById('phoneC').value;

        let idOrder = document.getElementById('idOrder').value;
             var xhttp = new XMLHttpRequest();
             let Req = "idOrder=" + idOrder;
             xhttp.onreadystatechange = function (e) {
                 console.log(this.readyState);
                 if (this.readyState === 4 && this.status === 200) {
                     alert(this.responseText);
                     var url = `@ViewBag.BaseUrl/Dashbord/Order/EditReload?Id=${idOrder}&status=${status}&idOrder=${loadId}&NameP=${nameP}`+
                                                 `&ContactNameP=${contactNameP}&Address=${addressP}&CityP=${cityP}&StateP=${stateP}&CurrentStatus=${status}` +
                                                 `&ZipP=${zipP}&PhoneP=${phoneP}&EmailP=${emailP}&PickupExactly=${scheduledPickupDateP}&Titl1DI=${instructions}` +
                                                 `&NameD=${nameD}&ContactNameD=${contactD}&AddressD=${addressD}&CityD=${cityD}&StateD=${stateD}&ZipD=${zipD}&PhoneD=${phoneD}` +
                                                 `&EmailD=${emailD}&TotalPaymentToCarrier=${paymentMethod}&PriceListed=${price}&BrokerFee=${brokerFee}&FaxC=${faxC}` +
                                                 `&IccmcC=${iccmcC}&ContactC=${contactC}&PhoneC=${phoneC}`;
                    window.location.href = url;
                 }
             };
             xhttp.open("POST", "@ViewBag.BaseUrl/Dashbord/Order/AddVech", true);
             xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
             xhttp.setRequestHeader('Accept-Encoding', 'br');
             xhttp.send(Req);
    }

    function DeleteVech(btnE) {
        const loadId = document.getElementById('idLoad').value;
                const status = document.getElementById('statusId').value;
                const nameP = document.getElementById('nameP').value;
                const contactNameP = document.getElementById('contactNameP').value;
                const addressP = document.getElementById('addressP').value;
                const cityP = document.getElementById('cityP').value;
                const stateP = document.getElementById('stateP').value;
                const zipP = document.getElementById('zipP').value;
                const phoneP = document.getElementById('phoneP').value;
                const emailP = document.getElementById('emailP').value;
                const scheduledPickupDateP = document.getElementById('scheduledPickupDateP').value;
                const instructions = document.getElementById('instructions').value;
                const nameD = document.getElementById('nameD').value;
                const contactD = document.getElementById('contactD').value;
                const addressD = document.getElementById('addressD').value;
                const cityD = document.getElementById('cityD').value;
                const stateD = document.getElementById('stateD').value;
                const zipD = document.getElementById('zipD').value;
                const phoneD = document.getElementById('phoneD').value;
                const emailD = document.getElementById('emailD').value;
                const paymentMethod = document.getElementById('paymentMethod').value;
                const price = document.getElementById('price').value;
                const brokerFee = document.getElementById('brokerFee').value;
                const faxC = document.getElementById('faxC').value;
                const iccmcC = document.getElementById('iccmcC').value;
                const contactC = document.getElementById('contactId').value;
                const phoneC = document.getElementById('phoneC').value;


                let idOrder = document.getElementById('idOrder').value;

            let Req = "idVech=" + btnE;
            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function (e) {
                if (this.readyState == 4 && this.status == 200) {
                    alert(this.responseText);
                     var url = `@ViewBag.BaseUrl/Dashbord/Order/EditReload?Id=${idOrder}&stasus=${status}&idOrder=${loadId}&NameP=${nameP}`+
                                                 `&ContactNameP=${contactNameP}&Address=${addressP}&CityP=${cityP}&StateP=${stateP}&CurrentStatus=${status}` +
                                                 `&ZipP=${zipP}&PhoneP=${phoneP}&EmailP=${emailP}&PickupExactly=${scheduledPickupDateP}&Titl1DI=${instructions}` +
                                                 `&NameD=${nameD}&ContactNameD=${contactD}&AddressD=${addressD}&CityD=${cityD}&StateD=${stateD}&ZipD=${zipD}&PhoneD=${phoneD}` +
                                                 `&EmailD=${emailD}&TotalPaymentToCarrier=${paymentMethod}&PriceListed=${price}&BrokerFee=${brokerFee}&FaxC=${faxC}` +
                                                 `&IccmcC=${iccmcC}&ContactC=${contactC}&PhoneC=${phoneC}`;
                    window.location.href = url;

                }
            };
            xhttp.open("POST", "@ViewBag.BaseUrl/Dashbord/Order/RemoveVech", true);
            xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xhttp.setRequestHeader('Accept-Encoding', 'br');
            xhttp.send(Req);
            tdElms.removeChild(FindId(tdElms.children, idVech));
        }
</script>

<style>
    .Billing .table .td input, .Billing .table .td select {
        text-align: center;
        width: 95%;
        padding: 6px 0;
        border: 1px solid #c4c9d5;
        border-radius: 10px !important;
        background: #fff;
        margin: 0;
        font-weight: 400;
        color: #007bff;
        font-size: 20px;
    }
</style>