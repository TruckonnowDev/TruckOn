@using System.Drawing;
@using System.IO;

<div class="body">
    <div class="filling">
        <div>
            <p class="idStlP">Load ID: @ViewBag.Shipp.Id</p>
            <div class="routeBlock">
                <p class="routeInfP">@ViewBag.Shipp.AddresP, @ViewBag.Shipp.CityP, @ViewBag.Shipp.StateP, @ViewBag.Shipp.ZipP </p>
                <p class="routeInfP">@ViewBag.Shipp.AddresD, @ViewBag.Shipp.CityD, @ViewBag.Shipp.StateD, @ViewBag.Shipp.ZipD </p>
            </div>
            <p class="nameVehStlP">@ViewBag.Vehiclw.Year @ViewBag.Vehiclw.Make @ViewBag.Vehiclw.Model</p>
            @if (ViewBag.Vehiclw.Ask != null)
            {
                <p class="typeVehStlP">Type: @ViewBag.Vehiclw.Ask.TypeVehicle</p>
            }
        </div>
        <hr />
        <div class="inspectionBlock">
            @if (@ViewBag.Vehiclw.Scan != null)
            {
                <img class="img Photola" src="data:image/gif;base64,@ViewBag.Vehiclw.Scan.Base64" />
            }
            <p class="headStlP">Pickup Inspection</p>
            <br />
            <p class="headPhoto">Photo inspection</p>
            @if (ViewBag.Vehiclw.PhotoInspections != null)
            {
                <div class="blockAllPhoto">

                    @for (int i = 0; i < ViewBag.Vehiclw.PhotoInspections.Count; i++)
                    {
                        if (ViewBag.Vehiclw.PhotoInspections[i].CurrentStatusPhoto == "PikedUp")
                        {
                            @for (int j = 0; j < ViewBag.Vehiclw.PhotoInspections[i].Photos.Count; j++)
                            {
                                byte[] image = Convert.FromBase64String(@ViewBag.Vehiclw.PhotoInspections[i].Photos[j].Base64);
                                MemoryStream ms = new MemoryStream(image);
                                Image img = Image.FromStream(ms);
                                if (img.Height > img.Width)
                                {
                                    <img class="img Photove" src="data:image/gif;base64,@ViewBag.Vehiclw.PhotoInspections[i].Photos[j].Base64" />
                                }
                                else
                                {
                                    <img class="img Photola" src="data:image/gif;base64,@ViewBag.Vehiclw.PhotoInspections[i].Photos[j].Base64" />
                                }
                            }
                        }
                    }
                </div>
            }
            else
            {
                <p class="noPhotoP">No Photo</p>
            }
            <p class="headPhoto">Photos of personal or additional items with the vehicle</p>
            @if (ViewBag.Vehiclw.Ask != null && ViewBag.Vehiclw.Ask.Any_personal_or_additional_items_with_or_in_vehicle != null && ViewBag.Vehiclw.Ask.Any_personal_or_additional_items_with_or_in_vehicle.Count != 0)
            {
                @for (int i = 0; i < ViewBag.Vehiclw.Ask.Any_personal_or_additional_items_with_or_in_vehicle.Count; i++)
                {
                    byte[] image = Convert.FromBase64String(ViewBag.Vehiclw.Ask.Any_personal_or_additional_items_with_or_in_vehicle[i].Base64);
                    MemoryStream ms = new MemoryStream(image);
                    Image img = Image.FromStream(ms);
                    if (img.Height > img.Width)
                    {
                        <img class="img Photove" src="data:image/gif;base64,@ViewBag.Vehiclw.Ask.Any_personal_or_additional_items_with_or_in_vehicle[1].Base64" />
                    }
                    else
                    {
                        <img class="img Photola" src="data:image/gif;base64,@ViewBag.Vehiclw.Ask.Any_personal_or_additional_items_with_or_in_vehicle[i].Base64" />
                    }
                }
            }
            else
            {
                <p class="noPhotoP">No Photo</p>
            }
            <p class="headPhoto">Photos of documents that go with the car</p>
            @if (ViewBag.Vehiclw.Ask != null && ViewBag.Vehiclw.Ask.Any_paperwork_or_documentation != null && ViewBag.Vehiclw.Ask.Any_paperwork_or_documentation.Count != 0)
            {
                @for (int i = 0; i < ViewBag.Vehiclw.Ask.Any_paperwork_or_documentation.Count; i++)
                {
                    byte[] image = Convert.FromBase64String(ViewBag.Vehiclw.Ask.Any_paperwork_or_documentation[i].Base64);
                    MemoryStream ms = new MemoryStream(image);
                    Image img = Image.FromStream(ms);
                    if (img.Height > img.Width)
                    {
                        <img class="img Photove" src="data:image/gif;base64,@ViewBag.Vehiclw.Ask.Any_paperwork_or_documentation[1].Base64" />
                    }
                    else
                    {
                        <img class="img Photola" src="data:image/gif;base64,@ViewBag.Vehiclw.Ask.Any_paperwork_or_documentation[i].Base64" />
                    }
                }
            }
            else
            {
                <p class="noPhotoP">No Photo</p>
            }
            <p class="headPhoto">Photos of additional details</p>
            @if (ViewBag.Vehiclw.Ask1 != null && ViewBag.Vehiclw.Ask1.Any_additional_parts_been_given_to_you != null && ViewBag.Vehiclw.Ask1.Any_additional_parts_been_given_to_you.Count != 0)
            {
                @for (int i = 0; i < ViewBag.Vehiclw.Ask.Any_paperwork_or_documentation.Count; i++)
                {
                    byte[] image = Convert.FromBase64String(ViewBag.Vehiclw.Ask1.Any_additional_parts_been_given_to_you[i].Base64);
                    MemoryStream ms = new MemoryStream(image);
                    Image img = Image.FromStream(ms);
                    if (img.Height > img.Width)
                    {
                        <img class="img Photove" src="data:image/gif;base64,@ViewBag.Vehiclw.Ask1.Any_additional_parts_been_given_to_you[1].Base64" />
                    }
                    else
                    {
                        <img class="img Photola" src="data:image/gif;base64,@ViewBag.Vehiclw.Ask1.Any_additional_parts_been_given_to_you[i].Base64" />
                    }
                }
            }
            else
            {
                <p class="noPhotoP">No Photo</p>
            }
            <p class="headPhoto">Photo of additional documentation after vehicle loading</p>
            @if (ViewBag.Vehiclw.Ask1 != null && ViewBag.Vehiclw.Ask1.Any_additional_documentation_been_given_after_loading != null && ViewBag.Vehiclw.Ask1.Any_additional_documentation_been_given_after_loading.Count != 0)
            {
                @for (int i = 0; i < ViewBag.Vehiclw.Ask1.Any_additional_documentation_been_given_after_loading.Count; i++)
                {
                    byte[] image = Convert.FromBase64String(ViewBag.Vehiclw.Ask1.Any_additional_documentation_been_given_after_loading[i].Base64);
                    MemoryStream ms = new MemoryStream(image);
                    Image img = Image.FromStream(ms);
                    if (img.Height > img.Width)
                    {
                        <img class="img Photove" src="data:image/gif;base64,@ViewBag.Vehiclw.Ask1.Any_additional_documentation_been_given_after_loading[1].Base64" />
                    }
                    else
                    {
                        <img class="img Photola" src="data:image/gif;base64,@ViewBag.Vehiclw.Ask1.Any_additional_documentation_been_given_after_loading[i].Base64" />
                    }
                }
            }
            else
            {
                <p class="noPhotoP">No Photo</p>
            }
            <p class="headPhoto">Photo strap on the car</p>
            @if (ViewBag.Vehiclw.Ask1 != null && ViewBag.Vehiclw.Ask1.App_will_force_driver_to_take_pictures_of_each_strap != null && ViewBag.Vehiclw.Ask1.App_will_force_driver_to_take_pictures_of_each_strap.Count != 0)
            {
                @for (int i = 0; i < ViewBag.Vehiclw.Ask1.App_will_force_driver_to_take_pictures_of_each_strap.Count; i++)
                {
                    byte[] image = Convert.FromBase64String(ViewBag.Vehiclw.Ask1.App_will_force_driver_to_take_pictures_of_each_strap[i].Base64);
                    MemoryStream ms = new MemoryStream(image);
                    Image img = Image.FromStream(ms);
                    if (img.Height > img.Width)
                    {
                        <img class="img Photove" src="data:image/gif;base64,@ViewBag.Vehiclw.Ask1.App_will_force_driver_to_take_pictures_of_each_strap[1].Base64" />
                    }
                    else
                    {
                        <img class="img Photola" src="data:image/gif;base64,@ViewBag.Vehiclw.Ask1.App_will_force_driver_to_take_pictures_of_each_strap[i].Base64" />
                    }
                }
            }
            else
            {
                <p class="noPhotoP">No Photo</p>
            }
            <p class="headPhoto">Photo after loading the truck</p>
            @if (ViewBag.Vehiclw.Ask1 != null && ViewBag.Vehiclw.Ask1.Photo_after_loading_in_the_truck != null && ViewBag.Vehiclw.Ask1.Photo_after_loading_in_the_truck.Count != 0)
            {
                @for (int i = 0; i < ViewBag.Vehiclw.Ask1.Photo_after_loading_in_the_truck.Count; i++)
                {
                    byte[] image = Convert.FromBase64String(ViewBag.Vehiclw.Ask1.Photo_after_loading_in_the_truck[i].Base64);
                    MemoryStream ms = new MemoryStream(image);
                    Image img = Image.FromStream(ms);
                    if (img.Height > img.Width)
                    {
                        <img class="img Photove" src="data:image/gif;base64,@ViewBag.Vehiclw.Ask1.Photo_after_loading_in_the_truck[1].Base64" />
                    }
                    else
                    {
                        <img class="img Photola" src="data:image/gif;base64,@ViewBag.Vehiclw.Ask1.Photo_after_loading_in_the_truck[i].Base64" />
                    }
                }
            }
            else
            {
                <p class="noPhotoP">No Photo</p>
            }
            <p class="headStlP">Delivery Inspection</p>
            <br />
            <p class="headPhoto">Photo inspection</p>
            @if (ViewBag.Vehiclw.PhotoInspections != null)
            {
                <div class="blockAllPhoto">
                    @for (int i = 0; i < ViewBag.Vehiclw.PhotoInspections.Count; i++)
                    {
                        if (ViewBag.Vehiclw.PhotoInspections[i].CurrentStatusPhoto == "Delyvery")
                        {
                            @for (int j = 0; j < ViewBag.Vehiclw.PhotoInspections[i].Photos.Count; j++)
                            {
                                byte[] image = Convert.FromBase64String(@ViewBag.Vehiclw.PhotoInspections[i].Photos[j].Base64);
                                MemoryStream ms = new MemoryStream(image);
                                Image img = Image.FromStream(ms);
                                if (img.Height > img.Width)
                                {
                                    <img class="img Photove" src="data:image/gif;base64,@ViewBag.Vehiclw.PhotoInspections[i].Photos[j].Base64" />
                                }
                                else
                                {
                                    <img class="img Photola" src="data:image/gif;base64,@ViewBag.Vehiclw.PhotoInspections[i].Photos[j].Base64" />
                                }
                            }
                        }
                    }
                </div>
            }
            else
            {
                <p class="noPhotoP">No Photo</p>
            }
        <p class="headPhoto">Photo Inspection by the client</p>
            @if (ViewBag.Vehiclw.askForUserDelyveryM != null && ViewBag.Vehiclw.askForUserDelyveryM.Have_you_inspected_the_vehicle_For_any_additional_imperfections_other_than_listed_at_the_pick_up_photo != null && ViewBag.Vehiclw.askForUserDelyveryM.Have_you_inspected_the_vehicle_For_any_additional_imperfections_other_than_listed_at_the_pick_up_photo.Count != 0)
            {
                @for (int i = 0; i < ViewBag.Vehiclw.Ask1.Photo_after_loading_in_the_truck.Count; i++)
                {
                    byte[] image = Convert.FromBase64String(ViewBag.Vehiclw.askForUserDelyveryM.Have_you_inspected_the_vehicle_For_any_additional_imperfections_other_than_listed_at_the_pick_up_photo[i].Base64);
                    MemoryStream ms = new MemoryStream(image);
                    Image img = Image.FromStream(ms);
                    if (img.Height > img.Width)
                    {
                        <img class="img Photove" src="data:image/gif;base64,@ViewBag.Vehiclw.askForUserDelyveryM.Have_you_inspected_the_vehicle_For_any_additional_imperfections_other_than_listed_at_the_pick_up_photo[1].Base64" />
                    }
                    else
                    {
                        <img class="img Photola" src="data:image/gif;base64,@ViewBag.Vehiclw.askForUserDelyveryM.Have_you_inspected_the_vehicle_For_any_additional_imperfections_other_than_listed_at_the_pick_up_photo[i].Base64" />
                    }
                }
            }
            else
            {
                <p class="noPhotoP">No Photo</p>
            }
        </div>
    </div>
</div>
<style type="text/css">
    * {
        margin: 0px;
    }

    .noPhotoP{
        color:rgba(66, 58, 58, 0.66);
        font-size: 20px;
        margin:5px;
    }

    .headPhoto {
        color: rgba(59, 51, 51, 0.87);
        font-size: 23px;
    }

    .blockAllPhoto {
        padding: 5px;
        display: flex;
        flex-wrap:wrap;
        align-items:center;
    }

    .img {
        margin: 5px;
        border-width: 1px;
        padding: 5px;
        border-style: groove;
    }

    .Photola {
        height: 19%;
        width: 19%;
    }

    .Photove {
        height: 10%;
        width: 10%;
    }

    @@media (max-width: 600px) {
        .Photove {
            height: 10%;
            width: 100%;
        }

        .Photola {
            height: 100%;
            width: 100%;
        }
    }

    .inspectionBlock {
        margin: 10px;
    }

    .routeBlock {
        margin: 5px;
    }

    .idStlP {
        color: #421f0e;
        font-size: 20px;
        margin: 20px;
    }

    .headStlP {
        color: black;
        font-size: 27px;
        margin: 20px, 20px, 20px, 0px;
    }

    .nameVehStlP {
        color: #e29334;
        font-size: 25px;
        margin: 20px, 20px, 20px, 0px;
    }

    .typeVehStlP {
        color: #e29334;
        font-size: 22px;
        margin: 20px;
    }

    .routeInfP {
        margin: 10px;
        font-size: 17px;
        color: #f3a74c;
    }

    .body {
        margin-top: 30px;
        margin-left: 5px;
        margin-right: 5px;
    }

    .filling {
        width: 100%;
    }
</style>